{"version":3,"file":"ol.js","sources":["../src/ol/util.js","../src/ol/AssertionError.js","../src/ol/CollectionEventType.js","../src/ol/ObjectEventType.js","../src/ol/obj.js","../src/ol/events.js","../src/ol/Disposable.js","../src/ol/functions.js","../src/ol/events/Event.js","../src/ol/events/Target.js","../src/ol/events/EventType.js","../src/ol/Observable.js","../src/ol/Object.js","../src/ol/Collection.js","../src/ol/asserts.js","../src/ol/extent/Corner.js","../src/ol/extent/Relationship.js","../src/ol/extent.js","../src/ol/geom/flat/transform.js","../src/ol/math.js","../src/ol/geom/GeometryType.js","../src/ol/sphere.js","../src/ol/proj/Units.js","../src/ol/proj/Projection.js","../src/ol/proj/epsg3857.js","../src/ol/proj/epsg4326.js","../src/ol/proj/projections.js","../src/ol/proj/transforms.js","../src/ol/proj.js","../src/ol/transform.js","../src/ol/geom/Geometry.js","../src/ol/color.js","../src/ol/colorlike.js","../src/ol/dom.js","../src/ol/webgl.js","../src/ol/has.js","../src/ol/css.js","../src/ol/ImageState.js","../src/ol/structs/LRUCache.js","../src/ol/render/canvas.js","../src/ol/style/Image.js","../src/ol/style/RegularShape.js","../src/ol/style/Circle.js","../src/ol/style/Fill.js","../src/ol/style/Stroke.js","../src/ol/style/Style.js","../src/ol/Feature.js","../src/ol/GeolocationProperty.js","../src/ol/array.js","../src/ol/geom/GeometryLayout.js","../src/ol/geom/SimpleGeometry.js","../src/ol/geom/flat/area.js","../src/ol/geom/flat/closest.js","../src/ol/geom/flat/deflate.js","../src/ol/geom/flat/inflate.js","../src/ol/geom/flat/simplify.js","../src/ol/geom/LinearRing.js","../src/ol/geom/Point.js","../src/ol/geom/flat/contains.js","../src/ol/geom/flat/interiorpoint.js","../src/ol/geom/flat/segments.js","../src/ol/geom/flat/intersectsextent.js","../src/ol/geom/flat/reverse.js","../src/ol/geom/flat/orient.js","../src/ol/geom/Polygon.js","../src/ol/Geolocation.js","../src/ol/string.js","../src/ol/coordinate.js","../src/ol/geom/flat/interpolate.js","../src/ol/geom/flat/length.js","../src/ol/geom/LineString.js","../src/ol/geom/flat/geodesic.js","../src/ol/render/EventType.js","../src/ol/style/TextPlacement.js","../src/ol/style/Text.js","../src/ol/Graticule.js","../src/ol/ImageBase.js","../src/ol/Image.js","../src/ol/TileState.js","../src/ol/easing.js","../src/ol/Tile.js","../src/ol/ImageTile.js","../src/ol/Kinetic.js","../src/ol/MapEvent.js","../src/ol/MapBrowserEvent.js","../src/ol/MapBrowserEventType.js","../src/ol/MapBrowserPointerEvent.js","../src/ol/pointer/EventType.js","../src/ol/pointer/EventSource.js","../src/ol/pointer/MouseSource.js","../src/ol/pointer/MsSource.js","../src/ol/pointer/NativeSource.js","../src/ol/pointer/PointerEvent.js","../src/ol/pointer/TouchSource.js","../src/ol/pointer/PointerEventHandler.js","../src/ol/MapBrowserEventHandler.js","../src/ol/MapEventType.js","../src/ol/MapProperty.js","../src/ol/structs/PriorityQueue.js","../src/ol/TileQueue.js","../src/ol/tilegrid/common.js","../src/ol/centerconstraint.js","../src/ol/rotationconstraint.js","../src/ol/ViewHint.js","../src/ol/ViewProperty.js","../src/ol/View.js","../src/ol/resolutionconstraint.js","../src/ol/layer/Property.js","../src/ol/layer/Base.js","../src/ol/source/State.js","../src/ol/layer/Group.js","../src/ol/size.js","../src/ol/PluggableMap.js","../src/ol/control/Control.js","../src/ol/layer/Layer.js","../src/ol/control/Attribution.js","../src/ol/control/Rotate.js","../src/ol/control/Zoom.js","../src/ol/control/util.js","../src/ol/interaction/Property.js","../src/ol/interaction/Interaction.js","../src/ol/interaction/DoubleClickZoom.js","../src/ol/events/condition.js","../src/ol/interaction/Pointer.js","../src/ol/interaction/DragPan.js","../src/ol/interaction/DragRotate.js","../src/ol/render/Box.js","../src/ol/interaction/DragBox.js","../src/ol/interaction/DragZoom.js","../src/ol/events/KeyCode.js","../src/ol/interaction/KeyboardPan.js","../src/ol/interaction/KeyboardZoom.js","../src/ol/interaction/MouseWheelZoom.js","../src/ol/interaction/PinchRotate.js","../src/ol/interaction/PinchZoom.js","../src/ol/interaction/DragAndDrop.js","../src/ol/interaction/DragRotateAndZoom.js","../src/ol/geom/Circle.js","../src/ol/geom/MultiLineString.js","../src/ol/geom/MultiPoint.js","../src/ol/geom/flat/center.js","../src/ol/geom/MultiPolygon.js","../src/ol/LayerType.js","../src/ol/layer/VectorRenderType.js","../src/ol/layer/Vector.js","../src/ol/format/FormatType.js","../src/ol/featureloader.js","../src/ol/loadingstrategy.js","../src/ol/source/Source.js","../src/ol/source/VectorEventType.js","../node_modules/quickselect/quickselect.js","../node_modules/rbush/index.js","../src/ol/structs/RBush.js","../src/ol/source/Vector.js","../src/ol/interaction/Draw.js","../src/ol/interaction/Extent.js","../src/ol/interaction/Modify.js","../src/ol/interaction/Select.js","../src/ol/interaction/Snap.js","../src/ol/interaction/Translate.js","../src/ol/interaction.js","../src/ol/reproj/common.js","../src/ol/ImageCanvas.js","../src/ol/render/Event.js","../src/ol/render/VectorContext.js","../src/ol/render/canvas/Immediate.js","../src/ol/style/IconImageCache.js","../src/ol/renderer/Map.js","../src/ol/renderer/canvas/Map.js","../src/ol/renderer/Layer.js","../src/ol/renderer/canvas/Layer.js","../src/ol/renderer/canvas/IntermediateCanvas.js","../src/ol/renderer/canvas/ImageLayer.js","../src/ol/TileRange.js","../src/ol/renderer/canvas/TileLayer.js","../src/ol/render/ReplayGroup.js","../src/ol/render/ReplayType.js","../src/ol/geom/flat/textpath.js","../src/ol/render/canvas/Instruction.js","../src/ol/render/replay.js","../src/ol/render/canvas/Replay.js","../src/ol/render/canvas/ImageReplay.js","../src/ol/render/canvas/LineStringReplay.js","../src/ol/render/canvas/PolygonReplay.js","../src/ol/geom/flat/straightchunk.js","../src/ol/render/canvas/ReplayGroup.js","../src/ol/render/canvas/TextReplay.js","../src/ol/renderer/vector.js","../src/ol/renderer/canvas/VectorLayer.js","../src/ol/layer/VectorTileRenderType.js","../src/ol/renderer/canvas/VectorTileLayer.js","../src/ol/Map.js","../src/ol/control/FullScreen.js","../src/ol/OverlayPositioning.js","../src/ol/Overlay.js","../src/ol/VectorTile.js","../src/ol/control/OverviewMap.js","../src/ol/control/ScaleLine.js","../src/ol/control/ZoomSlider.js","../src/ol/control/ZoomToExtent.js","../src/ol/webgl/Shader.js","../src/ol/webgl/Fragment.js","../src/ol/webgl/Vertex.js","../src/ol/render/webgl/circlereplay/defaultshader.js","../src/ol/render/webgl/circlereplay/defaultshader/Locations.js","../src/ol/vec/mat4.js","../src/ol/render/webgl/Replay.js","../src/ol/render/webgl.js","../src/ol/webgl/Buffer.js","../src/ol/render/webgl/CircleReplay.js","../src/ol/render/webgl/texturereplay/defaultshader.js","../src/ol/render/webgl/texturereplay/defaultshader/Locations.js","../src/ol/webgl/ContextEventType.js","../src/ol/webgl/Context.js","../src/ol/render/webgl/TextureReplay.js","../src/ol/render/webgl/ImageReplay.js","../src/ol/geom/flat/topology.js","../src/ol/render/webgl/linestringreplay/defaultshader.js","../src/ol/render/webgl/linestringreplay/defaultshader/Locations.js","../src/ol/render/webgl/LineStringReplay.js","../src/ol/render/webgl/polygonreplay/defaultshader.js","../src/ol/render/webgl/polygonreplay/defaultshader/Locations.js","../src/ol/structs/LinkedList.js","../src/ol/render/webgl/PolygonReplay.js","../src/ol/style/Atlas.js","../src/ol/style/AtlasManager.js","../src/ol/render/webgl/TextReplay.js","../src/ol/render/webgl/ReplayGroup.js","../src/ol/render/webgl/Immediate.js","../src/ol/renderer/webgl/defaultmapshader.js","../src/ol/renderer/webgl/defaultmapshader/Locations.js","../src/ol/renderer/webgl/Layer.js","../src/ol/renderer/webgl/ImageLayer.js","../src/ol/renderer/webgl/Map.js","../src/ol/renderer/webgl/tilelayershader.js","../src/ol/renderer/webgl/tilelayershader/Locations.js","../src/ol/renderer/webgl/TileLayer.js","../src/ol/renderer/webgl/VectorLayer.js","../src/ol/WebGLMap.js","../src/ol/control/MousePosition.js","../src/ol/format/Feature.js","../src/ol/format/JSONFeature.js","../src/ol/format/EsriJSON.js","../src/ol/xml.js","../src/ol/format/XMLFeature.js","../src/ol/format/GMLBase.js","../src/ol/format/xsd.js","../src/ol/format/GML3.js","../src/ol/format/GML.js","../src/ol/format/GML2.js","../src/ol/format/GPX.js","../src/ol/geom/GeometryCollection.js","../src/ol/format/GeoJSON.js","../src/ol/format/TextFeature.js","../src/ol/format/IGC.js","../src/ol/style/IconAnchorUnits.js","../src/ol/style/IconImage.js","../src/ol/format/KML.js","../src/ol/style/IconOrigin.js","../src/ol/style/Icon.js","../node_modules/ieee754/index.js","../node_modules/pbf/index.js","../src/ol/render/Feature.js","../src/ol/format/MVT.js","../src/ol/format/OSMXML.js","../src/ol/geom/flat/flip.js","../src/ol/format/Polyline.js","../src/ol/format/TopoJSON.js","../src/ol/format/filter/Filter.js","../src/ol/format/filter/LogicalNary.js","../src/ol/format/filter/And.js","../src/ol/format/filter/Bbox.js","../src/ol/format/filter/Spatial.js","../src/ol/format/filter/Contains.js","../src/ol/format/filter/Comparison.js","../src/ol/format/filter/During.js","../src/ol/format/filter/ComparisonBinary.js","../src/ol/format/filter/EqualTo.js","../src/ol/format/filter/GreaterThan.js","../src/ol/format/filter/GreaterThanOrEqualTo.js","../src/ol/format/filter/Intersects.js","../src/ol/format/filter/IsBetween.js","../src/ol/format/filter/IsLike.js","../src/ol/format/filter/IsNull.js","../src/ol/format/filter/LessThan.js","../src/ol/format/filter/LessThanOrEqualTo.js","../src/ol/format/filter/Not.js","../src/ol/format/filter/NotEqualTo.js","../src/ol/format/filter/Or.js","../src/ol/format/filter/Within.js","../src/ol/format/filter.js","../src/ol/format/WFS.js","../src/ol/format/WKT.js","../src/ol/format/XLink.js","../src/ol/format/XML.js","../src/ol/format/WMSCapabilities.js","../src/ol/format/WMSGetFeatureInfo.js","../src/ol/format/OWS.js","../src/ol/format/WMTSCapabilities.js","../src/ol/layer/Heatmap.js","../src/ol/layer/Image.js","../src/ol/layer/TileProperty.js","../src/ol/layer/Tile.js","../src/ol/layer/VectorTile.js","../src/ol/tilecoord.js","../src/ol/tileurlfunction.js","../src/ol/net.js","../src/ol/TileCache.js","../src/ol/reproj.js","../src/ol/reproj/Triangulation.js","../src/ol/reproj/Tile.js","../src/ol/tilegrid/TileGrid.js","../src/ol/tilegrid.js","../src/ol/source/Tile.js","../src/ol/source/TileEventType.js","../src/ol/source/UrlTile.js","../src/ol/source/TileImage.js","../src/ol/source/BingMaps.js","../src/ol/source/XYZ.js","../src/ol/source/CartoDB.js","../src/ol/source/Cluster.js","../src/ol/reproj/Image.js","../src/ol/source/Image.js","../src/ol/uri.js","../src/ol/source/ImageArcGISRest.js","../src/ol/source/ImageCanvas.js","../src/ol/source/ImageMapGuide.js","../src/ol/source/ImageStatic.js","../src/ol/source/common.js","../src/ol/source/WMSServerType.js","../src/ol/source/ImageWMS.js","../src/ol/source/OSM.js","../node_modules/pixelworks/lib/util.js","../node_modules/pixelworks/lib/processor.js","../src/ol/source/Raster.js","../src/ol/source/Stamen.js","../src/ol/source/TileArcGISRest.js","../src/ol/source/TileDebug.js","../src/ol/source/TileJSON.js","../src/ol/source/TileWMS.js","../src/ol/source/UTFGrid.js","../src/ol/VectorImageTile.js","../src/ol/source/VectorTile.js","../src/ol/source/WMTSRequestEncoding.js","../src/ol/tilegrid/WMTS.js","../src/ol/source/WMTS.js","../src/ol/source/Zoomify.js","index.js","../src/ol/proj/proj4.js","../src/ol/render.js"],"sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {module:ol/events/Target~EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @return {!Object<string, Array<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @private\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass Event {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (module:ol/events/Target~EventTargetLike|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    evt.target = this;\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<module:ol/events~ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nclass ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n\n  /**\n   * @param {module:ol/CollectionEventType} type Type.\n   * @param {*=} opt_element Element.\n   */\n  constructor(type, opt_element) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {module:ol/Collection~Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {module:ol/Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {module:ol/proj/Projection~Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {module:ol/proj/Units}\n     */\n    this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {module:ol/proj/Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {module:ol/extent~Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  clone() {}\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {}\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  computeExtent(extent) {}\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {}\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {}\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {}\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  getType() {}\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  applyTransform(transformFn) {}\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {}\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {}\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    source = getProjection(source);\n    const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        const pixelExtent = source.getExtent();\n        const projectedExtent = source.getWorldExtent();\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nclass LRUCache extends EventTarget {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super();\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.getCount() > this.highWaterMark;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  forEach(f, opt_this) {\n    let entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  get(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n\n\n  /**\n   * Prune the cache.\n   */\n  prune() {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n}\n\nexport default LRUCache;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (let weight = 100; weight <= 700; weight += 300) {\n      const fontWeight = weight + ' ';\n      let available = true;\n      for (let i = 0; i < len; ++i) {\n        const referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          const width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {module:ol/style/Image~Options} options Options.\n   */\n  constructor(options) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scale_ = options.scale;\n\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * This method is deprecated and always returns false.\n   * @return {boolean} false.\n   * @deprecated\n   * @api\n   */\n  getSnapToPixel() {\n    return false;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {}\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {}\n\n  /**\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {}\n\n  /**\n   * @abstract\n   * @return {module:ol/ImageState} Image state.\n   */\n  getImageState() {}\n\n  /**\n   * @abstract\n   * @return {module:ol/size~Size} Image size.\n   */\n  getImageSize() {}\n\n  /**\n   * @abstract\n   * @return {module:ol/size~Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {}\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {}\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {module:ol/size~Size} Size.\n   */\n  getSize() {}\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * This method is deprecated and does nothing.\n   * @param {boolean} snapToPixel Snap to pixel?\n   * @deprecated\n   * @api\n   */\n  setSnapToPixel(snapToPixel) {}\n\n  /**\n   * @abstract\n   * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n   * @param {T} thisArg Value to use as `this` when executing `listener`.\n   * @return {module:ol/events~EventsKey|undefined} Listener key.\n   * @template T\n   */\n  listenImageChange(listener, thisArg) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {}\n\n  /**\n   * @abstract\n   * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n   * @param {T} thisArg Value to use as `this` when executing `listener`.\n   * @template T\n   */\n  unlistenImageChange(listener, thisArg) {}\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {module:ol/style/RegularShape~Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.canvas_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listenImageChange(listener, thisArg) {}\n\n  /**\n   * @inheritDoc\n   */\n  load() {}\n\n  /**\n   * @inheritDoc\n   */\n  unlistenImageChange(listener, thisArg) {}\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  render_(atlasManager) {\n    let imageSize;\n    let lineCap = '';\n    let lineJoin = '';\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    const renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      const context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      const hasCustomHitDetectionImage = !this.fill_;\n      let renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      const id = this.getChecksum();\n      const info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  draw_(renderOptions, context, x, y) {\n    let i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    const strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    const fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    const recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      const checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  }\n}\n\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {module:ol/style/Circle~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  clone() {\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  }\n}\n\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {module:ol/style/Fill~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {module:ol/style/Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: (color && color.slice) ? color.slice() : color || undefined\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    if (this.checksum_ === undefined) {\n      if (\n        this.color_ instanceof CanvasPattern ||\n          this.color_ instanceof CanvasGradient\n      ) {\n        this.checksum_ = getUid(this.color_).toString();\n      } else {\n        this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n      }\n    }\n\n    return this.checksum_;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {module:ol/style/Stroke~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Clones the style.\n   * @return {module:ol/style/Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: (color && color.slice) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth()\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {string|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {string|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {string|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {string|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    if (this.checksum_ === undefined) {\n      this.checksum_ = 's';\n      if (this.color_) {\n        if (typeof this.color_ === 'string') {\n          this.checksum_ += this.color_;\n        } else {\n          this.checksum_ += getUid(this.color_).toString();\n        }\n      } else {\n        this.checksum_ += '-';\n      }\n      this.checksum_ += ',' +\n          (this.lineCap_ !== undefined ?\n            this.lineCap_.toString() : '-') + ',' +\n          (this.lineDash_ ?\n            this.lineDash_.toString() : '-') + ',' +\n          (this.lineDashOffset_ !== undefined ?\n            this.lineDashOffset_ : '-') + ',' +\n          (this.lineJoin_ !== undefined ?\n            this.lineJoin_ : '-') + ',' +\n          (this.miterLimit_ !== undefined ?\n            this.miterLimit_.toString() : '-') + ',' +\n          (this.width_ !== undefined ?\n            this.width_.toString() : '-');\n    }\n\n    return this.checksum_;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nclass Style {\n  /**\n   * @param {module:ol/style/Style~Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!module:ol/style/Style~GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n       * @private\n       * @type {module:ol/style/Image}\n       */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {module:ol/style/Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && geometry.clone) {\n      geometry = geometry.clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {module:ol/style/Fill} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {module:ol/style/Image} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {module:ol/style/Image} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {module:ol/style/Stroke} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {module:ol/style/Text} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {module:ol/style/Text} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function(feature) {\n        return (\n          /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function() {\n        return (\n          /** @type {module:ol/geom/Geometry} */ (geometry)\n        );\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<module:ol/geom/GeometryType, Array<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<module:ol/geom/GeometryType, Array<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {module:ol/geom/Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        const geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  }\n}\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  getCoordinates() {}\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n    */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n\n  /**\n   * @param {Array<module:ol/coordinate~Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  intersectsExtent(extent) {}\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n\n  /**\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nclass Geolocation extends BaseObject {\n\n  /**\n   * @param {module:ol/Geolocation~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/proj~TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(GeolocationProperty.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if (GEOLOCATION) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n    this.set(GeolocationProperty.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(GeolocationProperty.POSITION, projectedPosition);\n    this.set(GeolocationProperty.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  positionError_(error) {\n    error.type = EventType.ERROR;\n    this.setTracking(false);\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return (\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(GeolocationProperty.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n  }\n}\n\n\nexport default Geolocation;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<module:ol/coordinate~Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {module:ol/style/Text~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.font_ = options.font;\n\n    /**\n    * @private\n    * @type {number|undefined}\n    */\n    this.rotation_ = options.rotation;\n\n    /**\n    * @private\n    * @type {boolean|undefined}\n    */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n    * @private\n    * @type {number|undefined}\n    */\n    this.scale_ = options.scale;\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.text_ = options.text;\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.textAlign_ = options.textAlign;\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n    * @private\n    * @type {module:ol/style/Fill}\n    */\n    this.fill_ = options.fill !== undefined ? options.fill :\n      new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n    * @private\n    * @type {module:ol/style/TextPlacement|string}\n    */\n    this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.overflow_ = !!options.overflow;\n\n    /**\n    * @private\n    * @type {module:ol/style/Stroke}\n    */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n    * @private\n    * @type {module:ol/style/Fill}\n    */\n    this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n    /**\n    * @private\n    * @type {module:ol/style/Stroke}\n    */\n    this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n    /**\n    * @private\n    * @type {Array<number>}\n    */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n  * Clones the style.\n  * @return {module:ol/style/Text} The cloned style.\n  * @api\n  */\n  clone() {\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: this.getScale(),\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n      backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n    });\n  }\n\n  /**\n  * Get the `overflow` configuration.\n  * @return {boolean} Let text overflow the length of the path they follow.\n  * @api\n  */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n  * Get the font name.\n  * @return {string|undefined} Font.\n  * @api\n  */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n  * Get the maximum angle between adjacent characters.\n  * @return {number} Angle in radians.\n  * @api\n  */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n  * Get the label placement.\n  * @return {module:ol/style/TextPlacement|string} Text placement.\n  * @api\n  */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n  * Get the x-offset for the text.\n  * @return {number} Horizontal text offset.\n  * @api\n  */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n  * Get the y-offset for the text.\n  * @return {number} Vertical text offset.\n  * @api\n  */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n  * Get the fill style for the text.\n  * @return {module:ol/style/Fill} Fill style.\n  * @api\n  */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n  * Determine whether the text rotates with the map.\n  * @return {boolean|undefined} Rotate with map.\n  * @api\n  */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n  * Get the text rotation.\n  * @return {number|undefined} Rotation.\n  * @api\n  */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n  * Get the text scale.\n  * @return {number|undefined} Scale.\n  * @api\n  */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n  * Get the stroke style for the text.\n  * @return {module:ol/style/Stroke} Stroke style.\n  * @api\n  */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n  * Get the text to be rendered.\n  * @return {string|undefined} Text.\n  * @api\n  */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n  * Get the text alignment.\n  * @return {string|undefined} Text align.\n  * @api\n  */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n  * Get the text baseline.\n  * @return {string|undefined} Text baseline.\n  * @api\n  */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n  * Get the background fill style for the text.\n  * @return {module:ol/style/Fill} Fill style.\n  * @api\n  */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n  * Get the background stroke style for the text.\n  * @return {module:ol/style/Stroke} Stroke style.\n  * @api\n  */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n  * Get the padding for the text.\n  * @return {Array<number>} Padding.\n  * @api\n  */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n  * Set the `overflow` property.\n  *\n  * @param {boolean} overflow Let text overflow the path that it follows.\n  * @api\n  */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n  * Set the font.\n  *\n  * @param {string|undefined} font Font.\n  * @api\n  */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n  * Set the maximum angle between adjacent characters.\n  *\n  * @param {number} maxAngle Angle in radians.\n  * @api\n  */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n  * Set the x offset.\n  *\n  * @param {number} offsetX Horizontal text offset.\n  * @api\n  */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n  * Set the y offset.\n  *\n  * @param {number} offsetY Vertical text offset.\n  * @api\n  */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n  * Set the text placement.\n  *\n  * @param {module:ol/style/TextPlacement|string} placement Placement.\n  * @api\n  */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n  * Set the fill.\n  *\n  * @param {module:ol/style/Fill} fill Fill style.\n  * @api\n  */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n  * Set the rotation.\n  *\n  * @param {number|undefined} rotation Rotation.\n  * @api\n  */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n  * Set the scale.\n  *\n  * @param {number|undefined} scale Scale.\n  * @api\n  */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n  * Set the stroke.\n  *\n  * @param {module:ol/style/Stroke} stroke Stroke style.\n  * @api\n  */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n  * Set the text.\n  *\n  * @param {string|undefined} text Text.\n  * @api\n  */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n  * Set the text alignment.\n  *\n  * @param {string|undefined} textAlign Text align.\n  * @api\n  */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n  * Set the text baseline.\n  *\n  * @param {string|undefined} textBaseline Text baseline.\n  * @api\n  */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n  * Set the background fill.\n  *\n  * @param {module:ol/style/Fill} fill Fill style.\n  * @api\n  */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n  * Set the background stroke.\n  *\n  * @param {module:ol/style/Stroke} stroke Stroke style.\n  * @api\n  */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n  * Set the padding (`[top, right, bottom, left]`).\n  *\n  * @param {!Array<number>} padding Padding.\n  * @api\n  */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nclass Graticule {\n\n  /**\n   * @param {module:ol/Graticule~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.postcomposeListenerKey_ = null;\n\n    /**\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLatP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLonP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLatP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLonP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<module:ol/geom/LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<module:ol/geom/LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {module:ol/style/Stroke}\n     * @private\n     */\n    this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {module:ol/proj~TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {module:ol/proj~TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {Array<module:ol/Graticule~GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<module:ol/Graticule~GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels == true) {\n\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n        options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n        options.latLabelPosition;\n\n      /**\n       * @type {module:ol/style/Text}\n       * @private\n       */\n      this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n        new Text({\n          font: '12px Calibri,sans-serif',\n          textBaseline: 'bottom',\n          fill: new Fill({\n            color: 'rgba(0,0,0,1)'\n          }),\n          stroke: new Stroke({\n            color: 'rgba(255,255,255,1)',\n            width: 3\n          })\n        });\n\n      /**\n       * @type {module:ol/style/Text}\n       * @private\n       */\n      this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n        new Text({\n          font: '12px Calibri,sans-serif',\n          textAlign: 'end',\n          fill: new Fill({\n            color: 'rgba(0,0,0,1)'\n          }),\n          stroke: new Stroke({\n            color: 'rgba(255,255,255,1)',\n            width: 3\n          })\n        });\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n    }\n\n    this.setMap(options.map !== undefined ? options.map : null);\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const textPoint = this.getMeridianPoint_(lineString, extent, index);\n        this.meridiansLabels_[index] = {\n          geom: textPoint,\n          text: this.lonLabelFormatter_(lon)\n        };\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {module:ol/geom/LineString} lineString Meridian\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom, clampedTop);\n    const coordinate = [flatCoordinates[0], lat];\n    let point;\n    if (index in this.meridiansLabels_) {\n      point = this.meridiansLabels_[index].geom;\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const textPoint = this.getParallelPoint_(lineString, extent, index);\n        this.parallelsLabels_[index] = {\n          geom: textPoint,\n          text: this.latLabelFormatter_(lat)\n        };\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {module:ol/geom/LineString} lineString Parallels.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft, clampedRight);\n    const coordinate = [lon, flatCoordinates[1]];\n    let point;\n    if (index in this.parallelsLabels_) {\n      point = this.parallelsLabels_[index].geom;\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    const centerLonLat = this.toLonLatTransform_(center);\n    let centerLon = centerLonLat[0];\n    let centerLat = centerLonLat[1];\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    let validExtent = [\n      Math.max(extent[0], this.minLonP_),\n      Math.max(extent[1], this.minLatP_),\n      Math.min(extent[2], this.maxLonP_),\n      Math.min(extent[3], this.maxLatP_)\n    ];\n\n    validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n    const maxLat = validExtent[3];\n    const maxLon = validExtent[2];\n    const minLat = validExtent[1];\n    const minLon = validExtent[0];\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lon != this.minLon_ && cnt++ < maxLines) {\n      lon = Math.max(lon - interval, this.minLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    while (lon != this.maxLon_ && cnt++ < maxLines) {\n      lon = Math.min(lon + interval, this.maxLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = INTERVALS.length; i < ii; ++i) {\n      const delta = INTERVALS[i] / 2;\n      p1[0] = centerLon - delta;\n      p1[1] = centerLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = centerLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = INTERVALS[i];\n    }\n    return interval;\n  }\n\n  /**\n   * Get the map associated with this graticule.\n   * @return {module:ol/PluggableMap} The map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<module:ol/geom/LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<module:ol/geom/LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {module:ol/render/Event} e Event.\n   * @private\n   */\n  handlePostCompose_(e) {\n    const vectorContext = e.vectorContext;\n    const frameState = e.frameState;\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const squaredTolerance =\n        resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n    const updateProjectionInfo = !this.projection_ ||\n        !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n    // Draw the lines\n    vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n    let i, l, line;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      line = this.meridians_[i];\n      vectorContext.drawGeometry(line);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      line = this.parallels_[i];\n      vectorContext.drawGeometry(line);\n    }\n    let labelData;\n    if (this.meridiansLabels_) {\n      for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n        labelData = this.meridiansLabels_[i];\n        this.lonLabelStyle_.setText(labelData.text);\n        vectorContext.setTextStyle(this.lonLabelStyle_);\n        vectorContext.drawGeometry(labelData.geom);\n      }\n    }\n    if (this.parallelsLabels_) {\n      for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n        labelData = this.parallelsLabels_[i];\n        this.latLabelStyle_.setText(labelData.text);\n        vectorContext.setTextStyle(this.latLabelStyle_);\n        vectorContext.drawGeometry(labelData.geom);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n    const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    this.maxLatP_ = worldExtentP[3];\n    this.maxLonP_ = worldExtentP[2];\n    this.minLatP_ = worldExtentP[1];\n    this.minLonP_ = worldExtentP[0];\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n    this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n    this.projection_ = projection;\n  }\n\n  /**\n   * Set the map for this graticule.  The graticule will be rendered on the\n   * provided map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      unlistenByKey(this.postcomposeListenerKey_);\n      this.postcomposeListenerKey_ = null;\n      this.map_.render();\n    }\n    if (map) {\n      this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n      map.render();\n    }\n    this.map_ = map;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/ImageState} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {}\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {}\n}\n\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\nclass ImageWrapper extends ImageBase {\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\nexport default ImageWrapper;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   * @api\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {module:ol/TileState} state State.\n   * @api\n   */\n  setState(state) {\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {}\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nclass ImageTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n\n  /**\n   * @param {string} type Event type.\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nclass MapBrowserEvent extends MapEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {Event} browserEvent Browser event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nclass MapBrowserPointerEvent extends MapBrowserEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n}\n\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/pointer/EventSource\n */\n\nclass EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   * @param {!Object<string, function(Event)>} mapping Event mapping.\n   */\n  constructor(dispatcher, mapping) {\n\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     */\n    this.dispatcher = dispatcher;\n\n    /**\n     * @private\n     * @const\n     * @type {!Object<string, function(Event)>}\n     */\n    this.mapping_ = mapping;\n  }\n\n  /**\n   * List of events supported by this source.\n   * @return {Array<string>} Event names\n   */\n  getEvents() {\n    return Object.keys(this.mapping_);\n  }\n\n  /**\n   * Returns the handler that should handle a given event type.\n   * @param {string} eventType The event type.\n   * @return {function(Event)} Handler\n   */\n  getHandlerForEvent(eventType) {\n    return this.mapping_[eventType];\n  }\n\n}\n\nexport default EventSource;\n","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nclass MouseSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  isEventSimulatedFromTouch_(inEvent) {\n    const lts = this.lastTouches;\n    const x = inEvent.clientX;\n    const y = inEvent.clientY;\n    for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      const dx = Math.abs(x - t[0]);\n      const dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  cancel(inEvent) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  }\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  cleanupMouse() {\n    delete this.pointerMap[POINTER_ID.toString()];\n  }\n}\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nclass MsSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  prepareEvent_(inEvent) {\n    let e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  }\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  cleanup(pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  }\n\n}\n\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nclass NativeSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    super(dispatcher, mapping);\n  }\n\n}\n\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\nclass PointerEvent extends Event {\n\n  /**\n   * A class for pointer events.\n   *\n   * This class is used as an abstraction for mouse events,\n   * touch events and even native pointer events.\n   *\n   * @param {string} type The type of the event to create.\n   * @param {Event} originalEvent The event.\n   * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n   *    initial event properties.\n   */\n  constructor(type, originalEvent, opt_eventDict) {\n    super(type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    const eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  getButtons_(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    let buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  }\n\n  /**\n   * @private\n   * @param {Object<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  getPressure_(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    let pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  }\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nclass TouchSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n   * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n   */\n  constructor(dispatcher, mouseSource) {\n    const mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  isPrimaryTouch_(inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  }\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  setPrimaryTouch_(inTouch) {\n    const count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  removePrimaryPointer_(inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetClickCount_() {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  }\n\n  /**\n   * @private\n   */\n  resetClickCountHandler_() {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  }\n\n  /**\n   * @private\n   */\n  cancelResetClickCount_() {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  touchToPointer_(browserEvent, inTouch) {\n    const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  processTouches_(inEvent, inFunction) {\n    const touches = Array.prototype.slice.call(inEvent.changedTouches);\n    const count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (let i = 0; i < count; ++i) {\n      const pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  findTouch_(touchList, searchId) {\n    const l = touchList.length;\n    for (let i = 0; i < l; i++) {\n      const touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  vacuumTouches_(inEvent) {\n    const touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    const keys = Object.keys(this.pointerMap);\n    const count = keys.length;\n    if (count >= touchList.length) {\n      const d = [];\n      for (let i = 0; i < count; ++i) {\n        const key = keys[i];\n        const value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (let i = 0; i < d.length; ++i) {\n        this.cancelOut_(inEvent, d[i]);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  overDown_(browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  moveOverOut_(browserEvent, inPointer) {\n    const event = inPointer;\n    const pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    const outEvent = pointer.out;\n    const outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  upOut_(browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  cancelOut_(browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  cleanUpPointer_(inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  }\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  dedupSynthMouse_(inEvent) {\n    const lts = this.mouseSource.lastTouches;\n    const t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      const lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  }\n}\n\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nclass PointerEventHandler extends EventTarget {\n\n  /**\n   * @param {Element|HTMLDocument} element Viewport element.\n   */\n  constructor(element) {\n    super();\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  registerSources() {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      const mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  }\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  registerSource(name, source) {\n    const s = source;\n    const newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        const handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  }\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  register_() {\n    const l = this.eventSourceList_.length;\n    for (let i = 0; i < l; i++) {\n      const eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  }\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  unregister_() {\n    const l = this.eventSourceList_.length;\n    for (let i = 0; i < l; i++) {\n      const eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  }\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  eventHandler_(inEvent) {\n    const type = inEvent.type;\n    const handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  }\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  addEvents_(events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  }\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  removeEvents_(events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  }\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  cloneEvent(event, inEvent) {\n    const eventCopy = {};\n    for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      const p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  }\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  down(data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  }\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  move(data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  up(data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  enter(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  leave(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  over(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  out(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  }\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  cancel(data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  }\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  leaveOut(data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  }\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  enterOver(data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  contains_(container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  }\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  makeEvent(inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  }\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  fireEvent(inType, data, event) {\n    const e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  }\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  fireNativeEvent(event) {\n    const e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  }\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  wrapMouseEvent(eventType, event) {\n    const pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unregister_();\n    super.disposeInternal();\n  }\n}\n\nexport default PointerEventHandler;\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n\n  /**\n   * @param {module:ol/PluggableMap} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n\n    super();\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        const newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < (count >> 1)) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex = rIndex < count &&\n          priorities[rIndex] < priorities[lIndex] ?\n        rIndex : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n\n}\n\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nclass TileQueue extends PriorityQueue {\n\n  /**\n   * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {module:ol/Tile} */ (event.target);\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let abortedTiles = false;\n    let state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  }\n}\n\n\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nclass View extends BaseObject {\n\n  /**\n   * @param {module:ol/View~ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.getCenter().slice();\n    let resolution = this.getResolution();\n    let rotation = this.getRotation();\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n      const animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          const rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenter();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getSizeFromViewport_() {\n    const size = [100, 100];\n    const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    const element = document.querySelector(selector);\n    if (element) {\n      const metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  }\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  constrainCenter(center) {\n    return this.constraints_.center(center);\n  }\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  constrainResolution(resolution, opt_delta, opt_direction) {\n    const delta = opt_delta || 0;\n    const direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  }\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  constrainRotation(rotation, opt_delta) {\n    const delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  }\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  }\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const size = opt_size || this.getSizeFromViewport_();\n    const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    const size = opt_size || this.getSizeFromViewport_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.maxResolution_;\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.maxResolution_;\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {module:ol/View~State} View state.\n   */\n  getState(pixelRatio) {\n    const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const pixelResolution = resolution / pixelRatio;\n    const rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  }\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    let geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = [centerX, centerY];\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    // calculate rotated position\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    const resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    const centerX = rotX * cosAngle - rotY * sinAngle;\n    const centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  rotate(rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      const center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n}\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {module:ol/layer/Base~Options} options Layer options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n    * @type {Object<string, *>}\n    */\n    const properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  getType() {\n    return this.type;\n  }\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  getLayerState() {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex() || 0;\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  }\n\n  /**\n  * @abstract\n  * @param {Array<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array<module:ol/layer/Layer>} Array of layers.\n  */\n  getLayersArray(opt_array) {}\n\n  /**\n  * @abstract\n  * @param {Array<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array<module:ol/layer/Layer~State>} List of layer states.\n  */\n  getLayerStatesArray(opt_states) {}\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  getExtent() {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  }\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  getSourceState() {}\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  setOpacity(opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n}\n\n\nexport default BaseLayer;\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<module:ol/layer/Base>|module:ol/Collection<module:ol/layer/Base>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    const key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    const key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!module:ol/Collection<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object<string, Object<string, module:ol/TileRange>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(module:ol/layer/Layer): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection<module:ol/Overlay>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection<module:ol/control/Control>|Array<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection<module:ol/interaction/Interaction>|Array<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<module:ol/layer/Base>|module:ol/Collection<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection<module:ol/Overlay>|Array<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n\n  /**\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\n   */\n  constructor(options) {\n\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    const overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (const key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        const overlay = /** @type {module:ol/Overlay} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    let features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection<module:ol/control/Control>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    const frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    const deltaX = tileCenter[0] - frameState.focus[0];\n    const deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  }\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    const interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(MapEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      const keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    let viewState;\n\n    const size = this.getSize();\n    const view = this.getView();\n    const extent = createEmpty();\n    const previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      const layerStates = {};\n      for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        const moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  skipFeature(feature) {\n    const featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  unskipFeature(feature) {\n    const featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  }\n}\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<module:ol/layer/Base>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const layer = layers[i];\n    if (layer instanceof LayerGroup) {\n      return getLoading(layer.getLayers().getArray());\n    }\n    const source = layers[i].getSource();\n    if (source && source.loading) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n\n  /**\n   * @param {module:ol/control/Control~Options} options Control options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  }\n}\n\n\nexport default Control;\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {module:ol/layer/Layer~Options} options Layer options.\n   */\n  constructor(options) {\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    const source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    const source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  }\n\n  /**\n    * @inheritDoc\n    */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        const layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n}\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n\n  /**\n   * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  getSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    const layerStatesArray = frameState.layerStatesArray;\n    const resolution = frameState.viewState.resolution;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      const source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.getSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n}\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n\n  /**\n   * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n}\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n\n  /**\n   * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    const outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentResolution = view.getResolution();\n    if (currentResolution) {\n      const newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  }\n}\n\n\nexport default Zoom;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, VOID} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = VOID;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = VOID;\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/MapBrowserPointerEvent):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(module:ol/MapBrowserPointerEvent)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(module:ol/MapBrowserEvent):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(module:ol/MapBrowserPointerEvent)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(module:ol/MapBrowserPointerEvent):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.pointerEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n\n}\n\n\n/**\n * @param {Array<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      if (handled) {\n        mapBrowserEvent.preventDefault();\n      }\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!this.panning_) {\n    this.panning_ = true;\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n  }\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    if (this.panning_) {\n      this.panning_ = false;\n      view.setHint(ViewHint.INTERACTING, -1);\n    }\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n\n  /**\n   * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nclass DragBoxEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n}\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!module:ol/View} */ (map.getView());\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  /**\n   * @private\n   */\n  decrementInteractingHint_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  }\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    const maxDelta = MAX_DELTA;\n    const delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nclass DragAndDropEvent extends Event {\n\n  /**\n   * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<module:ol/Feature>=} opt_features Features.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    const formatConstructors = this.formatConstructors_;\n    let features = [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      const formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      const format = new formatConstructor();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    super.setActive(active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n\n  /**\n   * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n\n  /**\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getCoordinates() {}\n\n  /**\n   * @inheritDoc\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n}\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<module:ol/coordinate~Coordinate>|module:ol/geom~MultiLineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        const lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<module:ol/geom/LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n\n  /**\n   * @param {Array<module:ol/coordinate~Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<module:ol/geom/Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<module:ol/geom/Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinats in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        const polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\n\nexport default MultiPolygon;\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass VectorLayer extends Layer {\n  /**\n   * @param {module:ol/layer/Vector~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter;\n  }\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  getRenderOrder() {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  }\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ VOID);\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\n\nimport {VOID} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {module:ol/source/Source~Options} options Source options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  adaptAttributions_(attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  }\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n  * @abstract\n  * @return {Array<number>|undefined} Resolutions.\n  */\n  getResolutions() {}\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  setAttributions(attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  }\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|void} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = VOID;\n\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n\n    /**\n     * @private\n     */\n    this.rbush_ = rbush(opt_maxEntries, undefined);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<number, module:ol/structs/RBush~Entry>}\n     */\n    this.items_ = {};\n\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<module:ol/extent~Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {module:ol/structs/RBush~Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Return all values in the given extent.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {module:ol/structs/RBush~Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3]\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(this: S, T): *} callback Callback.\n   * @param {S=} opt_this The object to use as `this` in `callback`.\n   * @return {*} Callback return value.\n   * @template S\n   */\n  forEach(callback, opt_this) {\n    return this.forEach_(this.getAll(), callback, opt_this);\n  }\n\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(this: S, T): *} callback Callback.\n   * @param {S=} opt_this The object to use as `this` in `callback`.\n   * @return {*} Callback return value.\n   * @template S\n   */\n  forEachInExtent(extent, callback, opt_this) {\n    return this.forEach_(this.getInExtent(extent), callback, opt_this);\n  }\n\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(this: S, T): *} callback Callback.\n   * @param {S=} opt_this The object to use as `this` in `callback`.\n   * @private\n   * @return {*} Callback return value.\n   * @template S\n   */\n  forEach_(values, callback, opt_this) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback.call(opt_this, values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n\n  /**\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    // FIXME add getExtent() to rbush\n    const data = this.rbush_.data;\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n  }\n\n\n  /**\n   * @param {module:ol/structs/RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i | 0] = rbush.items_[i | 0];\n    }\n  }\n\n}\n\n\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport class VectorSourceEvent extends Event {\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/Feature=} opt_feature Feature.\n   */\n  constructor(type, opt_feature) {\n\n    super(type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array<module:ol/Feature>|module:ol/Collection<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nclass VectorSource extends Source {\n  /**\n   * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {module:ol/Feature} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {module:ol/Feature} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature).toString();\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {module:ol/Feature} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {module:ol/Feature} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<module:ol/Feature>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature).toString();\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature).toString();\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n    }\n  }\n\n\n  /**\n   * @param {!module:ol/Collection<module:ol/Feature>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  }\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       * @template T\n       */\n      function(feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  }\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {module:ol/Collection<module:ol/Feature>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<module:ol/Feature>} */ (features)\n    );\n  }\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  }\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {module:ol/Feature} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  }\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {module:ol/Feature} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {module:ol/format/Feature|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n\n  /**\n   * @override\n   */\n  getResolutions() {}\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {module:ol/Feature} */ (event.target);\n    const featureKey = getUid(feature).toString();\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {module:ol/Feature} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      const featureKey = getUid(feature).toString();\n      return featureKey in this.undefIdIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj/Projection} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: module:ol/extent~Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this.loader_.call(this, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = true;\n      }\n    }\n  }\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {module:ol/Feature} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature).toString();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {module:ol/Feature} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature).toString();\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  }\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {module:ol/Feature} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n}\n\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n   * @param {module:ol/Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Draw~Options} options Options.\n   */\n  constructor(options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          const squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {module:ol/layer/Vector} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    let sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  addToDrawing_(event) {\n    const coordinate = event.coordinate;\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    let coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    let angle = opt_angle;\n    if (!opt_angle) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      let geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nclass ExtentInteractionEvent extends Event {\n\n  /**\n   * @param {module:ol/extent~Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n * @api\n */\nclass ExtentInteraction extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    const sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    const extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  }\n}\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array<module:ol/extent~Extent>} segment\n * @property {Array<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {module:ol/Collection<module:ol/Feature>} features\n   * The features modified.\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\n   */\n  constructor(type, features, mapBrowserPointerEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Modify~Options} options Options.\n   */\n  constructor(options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    const /** @type {Array<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {module:ol/layer/Vector} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n    const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    const sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        const vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = /** @type {number} */ (segmentData.index);\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport Collection from '../Collection.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<module:ol/Feature>} selected Selected features.\n   * @param {Array<module:ol/Feature>} deselected Deselected features.\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {module:ol/interaction/Select~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * An association between selected feature (key)\n     * and original style (value)\n     * @private\n     * @type {Object<number, module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction>}\n     */\n    this.featureStyleAssociation_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection<module:ol/Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    listen(this.features_, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection<module:ol/Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    super.setMap(map);\n    if (map && this.style_) {\n      this.features_.forEach(map.skipFeature.bind(map));\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    if (this.style_) {\n      this.giveSelectedStyle_(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.removeSelectedStyle_(/** @type {ol.Feature} */ (evt.element));\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  giveSelectedStyle_(feature) {\n    const key = getUid(feature);\n    this.featureStyleAssociation_[key] = feature.getStyle();\n    feature.setStyle(this.style_);\n  }\n\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  removeSelectedStyle_(feature) {\n    const key = getUid(feature);\n    feature.setStyle(this.featureStyleAssociation_[key]);\n    delete this.featureStyleAssociation_[key];\n  }\n\n  /**\n   * Selects the given features and fires a select event.\n   * @param {Array<module:ol/Feature|module:ol/render/Feature>} selected Features.\n   * @api stable\n   */\n  select(selected) {\n    if (selected.length > 0) {\n      this.features_.extend(selected);\n      this.dispatchEvent(\n        new SelectEvent(SelectEventType.SELECT,\n          selected, [], null));\n    }\n  }\n\n  /**\n   * Deselects the given features and fires a select event.\n   * @param {Array.<module~ol/Feature|module:ol/render/Feature>} deselected Features.\n   * @api stable\n   */\n  deselect(deselected) {\n    if (deselected.length > 0) {\n      for (let i = deselected.length - 1; i >= 0; --i) {\n        this.features_.remove(deselected[i]);\n      }\n      this.dispatchEvent(\n        new SelectEvent(SelectEventType.SELECT,\n          [], deselected, null));\n    }\n  }\n}\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.features_;\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {module:ol/Collection<module:ol/Feature>|Array<module:ol/Feature>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array<module:ol/Feature>|!module:ol/Collection<module:ol/Feature>} */ (features)\n    );\n  }\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    let feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  }\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    let feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  }\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n\n    const lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    const upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    let snappedToVertex = false;\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n    let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      const closestSegment = segments[0].segment;\n      const isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const polygon = fromCircle(geometry);\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n   * @param {module:ol/Collection<module:ol/Feature>} features The features translated.\n   * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n   */\n  constructor(type, features, coordinate) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nclass ImageCanvas extends ImageBase {\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\n\nexport default ImageCanvas;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n\n  /**\n   * @param {module:ol/render/EventType} type Type.\n   * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n   * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n   */\n  constructor(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    super(type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {module:ol/geom/Geometry} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n   * @param {module:ol/Feature} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n   * @param {module:ol/Feature} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setImageStyle(imageStyle, opt_declutterGroup) {}\n\n  /**\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setTextStyle(textStyle, opt_declutterGroup) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        const localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = geometry.getEnds();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      const imageImage = imageStyle.getImage(1);\n      const imageOrigin = imageStyle.getOrigin();\n      const imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScale();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  }\n}\n\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n\n    /**\n    * @type {!Object<string, module:ol/style/IconImage>}\n    * @private\n    */\n    this.cache_ = {};\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  expire() {\n    if (this.cacheSize_ > this.maxCacheSize_) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {module:ol/color~Color} color Color.\n  * @return {module:ol/style/IconImage} Icon image.\n  */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {module:ol/color~Color} color Color.\n  * @param {module:ol/style/IconImage} iconImage Icon image.\n  */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nclass MapRenderer extends Disposable {\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  registerLayerRenderers(constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  }\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  getLayerRendererConstructors() {\n    return this.layerRendererConstructors_;\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  }\n\n  /**\n   * Removes all layer renderers.\n   */\n  removeLayerRenderers() {\n    for (const key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      const key = getUid(feature).toString();\n      const managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    const projection = viewState.projection;\n\n    let translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      const x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {}\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  getLayerRenderer(layer) {\n    const layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      let renderer;\n      for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        const candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  }\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  getLayerRendererByKey(layerKey) {\n    return this.layerRenderers_[layerKey];\n  }\n\n  /**\n   * @protected\n   * @return {Object<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  getLayerRenderers() {\n    return this.layerRenderers_;\n  }\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  handleLayerRendererChange_() {\n    this.map_.render();\n  }\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  removeLayerRendererByKey_(layerKey) {\n    const layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  removeUnusedLayerRenderers_(map, frameState) {\n    for (const layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  }\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleRemoveUnusedLayerRenderers(frameState) {\n    for (const layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = VOID;\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.dispatchRenderEvent = VOID;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CanvasMapRenderer extends MapRenderer {\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    const container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    const context = this.context_;\n    if (map.hasListener(type)) {\n      const extent = frameState.extent;\n      const pixelRatio = frameState.pixelRatio;\n      const viewState = frameState.viewState;\n      const rotation = viewState.rotation;\n\n      const transform = this.getTransform(frameState);\n\n      const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      const composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  getTransform(frameState) {\n    const viewState = frameState.viewState;\n    const dx1 = this.canvas_.width / 2;\n    const dy1 = this.canvas_.height / 2;\n    const sx = frameState.pixelRatio / viewState.resolution;\n    const sy = -sx;\n    const angle = -viewState.rotation;\n    const dx2 = -viewState.center[0];\n    const dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const context = this.context_;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    const rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    const viewResolution = frameState.viewState.resolution;\n    let i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  registerLayerRenderers(constructors) {\n    super.registerLayerRenderers(constructors);\n    for (let i = 0, ii = constructors.length; i < ii; ++i) {\n      const ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  }\n}\n\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, VOID} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nclass LayerRenderer extends Observable {\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(layer) {\n\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object<number, Object<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function(tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource).toString();\n    const zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    const tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|void} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = VOID;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nclass CanvasLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  dispatchComposeEvent_(type, context, frameState, opt_transform) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const width = frameState.size[0] * frameState.pixelRatio;\n      const height = frameState.size[1] * frameState.pixelRatio;\n      const rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      const transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      const render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      const composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  postCompose(context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  preCompose(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  dispatchRenderEvent(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  getTransform(frameState, offsetX) {\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n    const dx1 = pixelRatio * frameState.size[0] / 2;\n    const dy1 = pixelRatio * frameState.size[1] / 2;\n    const sx = pixelRatio / viewState.resolution;\n    const sy = -sx;\n    const angle = -viewState.rotation;\n    const dx2 = -viewState.center[0] + offsetX;\n    const dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  composeFrame(frameState, layerState, context) {}\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  prepareFrame(frameState, layerState) {}\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {VOID} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nclass IntermediateCanvasRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  composeFrame(frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    const image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      const extent = layerState.extent;\n      const clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      const imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      const alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      const dx = imageTransform[4];\n      const dy = imageTransform[5];\n      const dw = image.width * imageTransform[0];\n      const dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  getImage() {}\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  getImageTransform() {}\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== VOID) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return super.forEachLayerAtCoordinate(arguments);\n    } else {\n      const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  }\n}\n\n\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends IntermediateCanvasRenderer {\n\n  /**\n   * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n   */\n  constructor(imageLayer) {\n\n    super(imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        const ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageTransform() {\n    return this.imageTransform_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n\n    let image;\n    const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    const imageSource = imageLayer.getSource();\n\n    const hints = frameState.viewHints;\n\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      let skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        const context = vectorRenderer.context;\n        const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      const imageExtent = image.getExtent();\n      const imageResolution = image.getResolution();\n      const imagePixelRatio = image.getPixelRatio();\n      const scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      const transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return super.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n       this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n       this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  }\n\n  /**\n   * @param {module:ol/TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n  * @return {number} Height.\n  */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n  * @return {module:ol/size~Size} Size.\n  */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n  * @return {number} Width.\n  */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n  * @param {module:ol/TileRange} tileRange Tile range.\n  * @return {boolean} Intersects.\n  */\n  intersects(tileRange) {\n    return this.minX <= tileRange.maxX &&\n       this.maxX >= tileRange.minX &&\n       this.minY <= tileRange.maxY &&\n       this.maxY >= tileRange.minY;\n  }\n}\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends IntermediateCanvasRenderer {\n\n  /**\n   * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n   * @param {boolean=} opt_noContext Skip the context creation.\n   */\n  constructor(tileLayer, opt_noContext) {\n\n    super(tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile_(tile) {\n    const tileState = tile.getState();\n    const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const layer = this.getLayer();\n    const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    let tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n\n    const tileLayer = this.getLayer();\n    const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    let oversampling = Math.round(viewResolution / tileResolution) || 1;\n    let extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, module:ol/Tile>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    const hints = frameState.viewHints;\n    const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    let tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      const context = this.context;\n      if (context) {\n        const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        const canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      const zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      let tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (const tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    const scale = this.renderedResolution / viewResolution;\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    const image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageTransform() {\n    return this.imageTransform_;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nclass ReplayGroup {\n  /**\n   * @abstract\n   * @param {number|undefined} zIndex Z index.\n   * @param {module:ol/render/ReplayType} replayType Replay type.\n   * @return {module:ol/render/VectorContext} Replay.\n   */\n  getReplay(zIndex, replayType) {}\n\n  /**\n   * @abstract\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {}\n}\n\nexport default ReplayGroup;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {VOID} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\nclass CanvasReplay extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super();\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayImage_(\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    const w = (width + originX > image.width) ? image.width - originX : width;\n    const h = (height + originY > image.height) ? image.height - originY : height;\n    const boxW = padding[3] + w * scale + padding[1];\n    const boxH = padding[0] + h * scale + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    let transform = null;\n    if (rotation !== 0) {\n      const centerX = x + anchorX;\n      const centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    const intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      const declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    let myEnd = this.coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    const nextCoord = [NaN, NaN];\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, replayEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const replayBegin = this.coordinates.length;\n    let flatCoordinates, replayEnd, replayEnds, replayEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      const endss = geometry.getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  }\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  renderDeclutter_(declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      const groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        const box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replay_(\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    const skipFeatures = !isEmpty(skippedFeaturesHash);\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n\n    const state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    let x, y;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          const height = /** @type {number} */ (instruction[7]);\n          const opacity = /** @type {number} */ (instruction[8]);\n          const originX = /** @type {number} */ (instruction[9]);\n          const originY = /** @type {number} */ (instruction[10]);\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\n          let rotation = /** @type {number} */ (instruction[12]);\n          const scale = /** @type {number} */ (instruction[13]);\n          const width = /** @type {number} */ (instruction[14]);\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          const overflow = /** @type {number} */ (instruction[5]);\n          const fillKey = /** @type {string} */ (instruction[6]);\n          const maxAngle = /** @type {number} */ (instruction[7]);\n          const measure = /** @type {function(string):number} */ (instruction[8]);\n          const offsetY = /** @type {number} */ (instruction[9]);\n          const strokeKey = /** @type {string} */ (instruction[10]);\n          const strokeWidth = /** @type {number} */ (instruction[11]);\n          const text = /** @type {string} */ (instruction[12]);\n          const textKey = /** @type {string} */ (instruction[13]);\n          const textScale = /** @type {number} */ (instruction[14]);\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            const result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replayHitDetection(\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state, geometry) {\n    const fillStyle = state.fillStyle;\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  updateFillStyle(state, createFill, geometry) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  endGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = VOID;\n\n\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nclass CanvasImageReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle, declutterGroup) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const image = imageStyle.getImage(1);\n    const origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  }\n}\n\n\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nclass CanvasLineStringReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\n\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nclass CanvasPolygonReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle != undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  setFillStrokeStyles_(geometry) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\n\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nclass CanvasReplayGroup extends ReplayGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay group can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    super();\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  addDeclutter(group) {\n    let declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * @param {Array<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  hasReplays(replays) {\n    for (const zIndex in this.replaysByZIndex_) {\n      const candidates = this.replaysByZIndex_[zIndex];\n      for (let i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  finish() {\n    for (const zKey in this.replaysByZIndex_) {\n      const replays = this.replaysByZIndex_[zKey];\n      for (const replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    const context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    const mask = getCircleArray(hitTolerance);\n    let declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    let replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (let i = 0; i < contextSize; i++) {\n        for (let j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              let result;\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            const declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReplay(zIndex, replayType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[replayType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  }\n\n  /**\n   * @return {Object<string, Object<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  getReplays() {\n    return this.replaysByZIndex_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isEmpty() {\n    return isEmpty(this.replaysByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  replay(\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        const replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            const declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  }\n}\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nclass CanvasTextReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    let begin = this.coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let end = 2;\n    let stride = 2;\n    let i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      const width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage(text, textKey, fillKey, strokeKey) {\n    let label;\n    const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      const textState = this.textStates[textKey] || this.textState_;\n      const pixelRatio = this.pixelRatio;\n      const scale = textState.scale * pixelRatio;\n      const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      const lines = text.split('\\n');\n      const numLines = lines.length;\n      const widths = [];\n      const width = measureTextWidths(textState.font, lines, widths);\n      const lineHeight = measureTextHeight(textState.font);\n      const height = lineHeight * numLines;\n      const renderWidth = (width + strokeWidth);\n      const context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      const leftRight = (0.5 - align);\n      const x = align * label.width / scale + leftRight * strokeWidth;\n      let i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawTextImage_(label, begin, end) {\n    const textState = this.textState_;\n    const strokeState = this.textStrokeState_;\n    const pixelRatio = this.pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  drawChars_(begin, end, declutterGroup) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const font = textState.font;\n    const textScale = textState.scale;\n    const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    let widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        let width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        let width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle, declutterGroup) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      const textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  }\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n\n    super(vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  compose(context, frameState, layerState) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    let transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    const clipExtent = layerState.extent;\n    const clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    const replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      let drawOffsetX = 0;\n      let drawOffsetY = 0;\n      let replayContext;\n      const transparentLayer = layerState.opacity !== 1;\n      const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        let drawWidth = context.canvas.width;\n        let drawHeight = context.canvas.height;\n        if (rotation) {\n          const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      const alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      const viewHints = frameState.viewHints;\n      const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      const width = frameState.size[0] * pixelRatio;\n      const height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        let startX = extent[0];\n        const worldWidth = getWidth(projectionExtent);\n        let world = 0;\n        let offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          const mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  composeFrame(frameState, layerState, context) {\n    const transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      const resolution = frameState.viewState.resolution;\n      const rotation = frameState.viewState.rotation;\n      const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      const features = {};\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  handleFontsChanged_(event) {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n    const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    const vectorSource = vectorLayer.getSource();\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    const projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<module:ol/Feature>} */\n      const features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n\n  /**\n   * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n   */\n  constructor(layer) {\n\n    super(layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tile = super.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n    const layer = this.getLayer();\n    const layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      const renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return super.prepareFrame(frameState, layerState);\n  }\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  createReplayGroup_(tile, pixelRatio, projection) {\n    const layer = this.getLayer();\n    const revision = layer.getRevision();\n    const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    const replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const tileExtent = tile.extent;\n\n    const zIndexKeys = {};\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n      const tileProjection = sourceTile.getProjection();\n      let reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n      const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      const render = function(feature) {\n        let styles;\n        const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this, feature);\n        }\n      }\n      replayGroup.finish();\n      for (const r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    }\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    const features = {};\n\n    /** @type {Array<module:ol/VectorImageTile>} */\n    const renderedTiles = this.renderedTiles;\n\n    let bufferedExtent, found;\n    let i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            const key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  getReplayTransform_(tile, frameState) {\n    const layer = this.getLayer();\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGrid();\n    const tileCoord = tile.tileCoord;\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n    const renderResolution = viewState.resolution / pixelRatio;\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const center = viewState.center;\n    const origin = getTopLeft(tileExtent);\n    const size = frameState.size;\n    const offsetX = Math.round(pixelRatio * size[0] / 2);\n    const offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  handleFontsChanged_(event) {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  postCompose(context, frameState, layerState) {\n    const layer = this.getLayer();\n    const renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      const declutterReplays = layer.getDeclutter() ? {} : null;\n      const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      const replayTypes = VECTOR_REPLAYS[renderMode];\n      const pixelRatio = frameState.pixelRatio;\n      const rotation = frameState.viewState.rotation;\n      const size = frameState.size;\n      let offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      const viewHints = frameState.viewHints;\n      const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      const tiles = this.renderedTiles;\n      const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      const clips = [];\n      const zs = [];\n      for (let i = tiles.length - 1; i >= 0; --i) {\n        const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n        const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        let transform = undefined;\n        for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          const sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          const currentZ = sourceTile.tileCoord[0];\n          const currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (let j = 0, jj = clips.length; j < jj; ++j) {\n            const clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    super.postCompose(context, frameState, layerState);\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  }\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  renderTileImage_(tile, pixelRatio, projection) {\n    const layer = this.getLayer();\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      const tileCoord = tile.wrappedTileCoord;\n      const z = tileCoord[0];\n      const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      const tileGrid = source.getTileGridForProjection(projection);\n      const resolution = tileGrid.getResolution(z);\n      const context = tile.getContext(layer);\n      const size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        const sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const pixelScale = pixelRatio / resolution;\n        const transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nclass Map extends PluggableMap {\n\n  /**\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    const renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  }\n}\n\n\nexport default Map;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nclass FullScreen extends Control {\n\n  /**\n   * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    const button = document.createElement('button');\n    button.className = this.cssClassName_ + '-' + isFullScreen();\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.labelNode_);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const button = this.element.firstElementChild;\n    const map = this.getMap();\n    if (isFullScreen()) {\n      button.className = this.cssClassName_ + '-true';\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      button.className = this.cssClassName_ + '-false';\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  }\n}\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n\n  /**\n   * @param {module:ol/Overlay~Options} options Overlay options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {module:ol/PluggableMap|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return (\n      /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {module:ol/OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return (\n      /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      const container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {module:ol/PluggableMap|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  panIntoView() {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    const margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n        const centerPx = map.getPixelFromCoordinate(center);\n        const newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {module:ol/size~Size|undefined} size The size of the element.\n   * @return {module:ol/extent~Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {module:ol/OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel The pixel location.\n   * @param {module:ol/size~Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    let offsetX = offset[0];\n    let offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      const left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      const top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {module:ol/Overlay~Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\n\nexport default Overlay;\n","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nclass VectorTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Data source url.\n   * @param {module:ol/format/Feature} format Feature format.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<module:ol/Feature>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/render/ReplayGroup>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    super.disposeInternal();\n  }\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {module:ol/extent~Extent} The extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_ || DEFAULT_EXTENT;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {module:ol/format/Feature} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<module:ol/Feature|module:ol/render/Feature>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {module:ol/proj/Projection} Feature projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @return {module:ol/render/ReplayGroup} Replay group.\n   */\n  getReplayGroup(layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<module:ol/Feature>} features The loaded features.\n   * @param {module:ol/proj/Projection} dataProjection Data projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   */\n  onLoad(features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {module:ol/extent~Extent} extent The extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {module:ol/proj/Projection} projection Feature projection.\n   * @api\n   */\n  setProjection(projection) {\n    this.projection_ = projection;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n   */\n  setReplayGroup(layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<module:ol/layer/Layer>|module:ol/Collection<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n\n  /**\n   * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {module:ol/Map}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(\n        /**\n         * @param {module:ol/layer/Layer} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {module:ol/Overlay}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    const move = function(event) {\n      const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function(event) {\n      const coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {module:ol/View} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  bindView_(view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  handleRotationChanged_() {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtent(mapSize);\n\n    const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtent(ovmapSize);\n\n    const topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    const bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtent(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const extent = view.calculateExtent(mapSize);\n    const ovresolution = ovview.getResolution();\n    const bottomLeft = getBottomLeft(extent);\n    const topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  calculateCoordinateRotate_(rotation, coordinate) {\n    let coordinateRotate;\n\n    const map = this.getMap();\n    const view = map.getView();\n\n    const currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return the overview map.\n   * @return {module:ol/PluggableMap} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n}\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nclass ScaleLine extends Control {\n\n  /**\n   * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?module:ol/View~State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n        Units.METRIC);\n\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {module:ol/control/ScaleLine~Units|undefined} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return (\n      /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n    );\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    let pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    let nominalCount = this.minWidth_ * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    let count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    const html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  }\n}\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n\n  /**\n   * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {module:ol/size~Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.dragger_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    const containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const computedStyle = getComputedStyle(thumb);\n    const thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    const thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  }\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {module:ol/pointer/PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n      const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  }\n}\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n\n  /**\n   * @param {module:ol/control/ZoomToExtent~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @abstract\n */\nclass WebGLShader {\n\n  /**\n   * @param {string} source Source.\n   */\n  constructor(source) {\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.source_ = source;\n\n  }\n\n  /**\n   * @abstract\n   * @return {number} Type.\n   */\n  getType() {}\n\n  /**\n   * @return {string} Source.\n   */\n  getSource() {\n    return this.source_;\n  }\n}\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nclass WebGLFragment extends WebGLShader {\n\n  /**\n   * @param {string} source Source.\n   */\n  constructor(source) {\n    super(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FRAGMENT_SHADER;\n  }\n}\n\n\nexport default WebGLFragment;\n","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nclass WebGLVertex extends WebGLShader {\n\n  /**\n   * @param {string} source Source.\n   */\n  constructor(source) {\n    super(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return VERTEX_SHADER;\n  }\n}\n\n\nexport default WebGLVertex;\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_lineWidth = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_pixelRatio = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_fillColor = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_strokeColor = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_size = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_instruction = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_radius = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/render/webgl/Replay\n */\n\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nclass WebGLReplay extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array<module:ol/Feature|module:ol/render/Feature>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {module:ol/render/webgl/LineStringReplay|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  getDeleteResourcesFunction(context) {}\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  finish(context) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n   */\n  setUpProgram(gl, context, size, pixelRatio) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n   */\n  shutDownProgram(gl, locations) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {}\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  drawHitDetectionReplay(gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  }\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  drawHitDetectionReplayAll(gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    const result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replay(\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    const gl = context.getGL();\n    let tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    const locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    const projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    let result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(gl, context, start, end) {\n    const elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    const elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n}\n\n\nexport default WebGLReplay;\n","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport const EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport const triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  const area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nconst BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nclass WebGLBuffer {\n\n  /**\n   * @param {Array<number>=} opt_arr Array.\n   * @param {number=} opt_usage Usage.\n   */\n  constructor(opt_arr, opt_usage) {\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n  }\n\n  /**\n   * @return {Array<number>} Array.\n   */\n  getArray() {\n    return this.arr_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n}\n\nexport default WebGLBuffer;\n","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nclass WebGLCircleReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<Array<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         strokeColor: (Array<number>|null),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    let numVertices = this.vertices.length;\n    let numIndices = this.indices.length;\n    let n = numVertices / 4;\n    let i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 0;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 1;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 2;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 3;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 2;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const radius = circleGeometry.getRadius();\n    const stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      let flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          const lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n    // object.\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n        this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  setFillStyle_(gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  setStrokeStyle_(gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    let strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  }\n}\n\n\nexport default WebGLCircleReplay;\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_image = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n    /**\n     * @type {number}\n     */\n    this.a_texCoord = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n    /**\n     * @type {number}\n     */\n    this.a_offsets = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_opacity = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_rotateWithView = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nclass WebGLContext extends Disposable {\n\n  /**\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {WebGLRenderingContext} gl GL.\n   */\n  constructor(canvas, gl) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/webgl/Context~BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  bindBuffer(target, buf) {\n    const gl = this.getGL();\n    const arr = buf.getArray();\n    const bufferKey = String(getUid(buf));\n    if (bufferKey in this.bufferCache_) {\n      const bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      let /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  }\n\n  /**\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = String(getUid(buf));\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this.canvas_);\n    const gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (const key in this.bufferCache_) {\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\n      }\n      for (const key in this.programCache_) {\n        gl.deleteProgram(this.programCache_[key]);\n      }\n      for (const key in this.shaderCache_) {\n        gl.deleteShader(this.shaderCache_[key]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  getHitDetectionFramebuffer() {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  }\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {module:ol/webgl/Shader} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  getShader(shaderObject) {\n    const shaderKey = String(getUid(shaderObject));\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      const gl = this.getGL();\n      const shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  }\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n   * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  getProgram(fragmentShaderObject, vertexShaderObject) {\n    const programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      const gl = this.getGL();\n      const program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  handleWebGLContextRestored() {\n  }\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  initHitDetectionFramebuffer_() {\n    const gl = this.gl_;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    const texture = createEmptyTexture(gl, 1, 1);\n    const renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  }\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nclass WebGLTextureReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    const textures = this.getTextures(true);\n    const gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        let i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  drawCoordinates(flatCoordinates, offset, end, stride) {\n    const anchorX = /** @type {number} */ (this.anchorX);\n    const anchorY = /** @type {number} */ (this.anchorY);\n    const height = /** @type {number} */ (this.height);\n    const imageHeight = /** @type {number} */ (this.imageHeight);\n    const imageWidth = /** @type {number} */ (this.imageWidth);\n    const opacity = /** @type {number} */ (this.opacity);\n    const originX = /** @type {number} */ (this.originX);\n    const originY = /** @type {number} */ (this.originY);\n    const rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    const rotation = /** @type {number} */ (-this.rotation);\n    const scale = /** @type {number} */ (this.scale);\n    const width = /** @type {number} */ (this.width);\n    const cos = Math.cos(rotation);\n    const sin = Math.sin(rotation);\n    let numIndices = this.indices.length;\n    let numVertices = this.vertices.length;\n    let i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this.origin[0];\n      y = flatCoordinates[i + 1] - this.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = originX / imageWidth;\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\n      this.vertices[numVertices++] = originY / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = originX / imageWidth;\n      this.vertices[numVertices++] = originY / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  }\n\n  /**\n   * @protected\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  createTextures(textures, images, texturePerImage, gl) {\n    let texture, image, uid, i;\n    const ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image).toString();\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    const textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    const groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      let i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        const end = groupIndices[i];\n        this.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  }\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<number>} groupIndices Texture group indices.\n   */\n  drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices) {\n    let featureIndex = 0;\n\n    let i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      const groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      const groupEnd = groupIndices[i];\n\n      let start = groupStart;\n      let end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        const feature = this.startIndicesFeature[featureIndex];\n\n        const featureUid = getUid(feature).toString();\n        if (skippedFeaturesHash[featureUid] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this.startIndices.length - 1) ?\n            groupEnd : this.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this.startIndices.length - 1) ?\n            groupEnd : this.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this.drawElements(gl, context, start, end);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, groupStart, start, end, feature, featureUid;\n    let featureIndex = this.startIndices.length - 1;\n    const hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n      end = this.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  }\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @returns {Array<WebGLTexture>} Textures.\n   */\n  getTextures(opt_all) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @returns {Array<WebGLTexture>} Textures.\n   */\n  getHitDetectionTextures() {}\n}\n\n\nexport default WebGLTextureReplay;\n","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nclass WebGLImageReplay extends WebGLTextureReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    const gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    const indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    const texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    super.finish(context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle) {\n    const anchor = imageStyle.getAnchor();\n    const image = imageStyle.getImage(1);\n    const imageSize = imageStyle.getImageSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const opacity = imageStyle.getOpacity();\n    const origin = imageStyle.getOrigin();\n    const rotateWithView = imageStyle.getRotateWithView();\n    const rotation = imageStyle.getRotation();\n    const size = imageStyle.getSize();\n    const scale = imageStyle.getScale();\n\n    let currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTextures(opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionTextures() {\n    return this.hitDetectionTextures_;\n  }\n}\n\n\nexport default WebGLImageReplay;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_lineWidth = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_miterLimit = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_color = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_size = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_pixelRatio = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n    /**\n     * @type {number}\n     */\n    this.a_lastPos = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_nextPos = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_direction = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nclass WebGLLineStringReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n\n    let i, ii;\n    let numVertices = this.vertices.length;\n    let numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    const lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    const lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    const closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    let startCoords, sign, n;\n    let lastIndex = numIndices;\n    let lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    let p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this.indices[numIndices++] = n + 2;\n            this.indices[numIndices++] = n;\n            this.indices[numIndices++] = n + 1;\n\n            this.indices[numIndices++] = n + 1;\n            this.indices[numIndices++] = n + 3;\n            this.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = lastIndex - 1;\n          this.indices[numIndices++] = lastIndex;\n\n          this.indices[numIndices++] = lastIndex;\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this.indices[numIndices++] = n + 2;\n            this.indices[numIndices++] = n;\n            this.indices[numIndices++] = n + 1;\n\n            this.indices[numIndices++] = n + 1;\n            this.indices[numIndices++] = n + 3;\n            this.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = n + 2;\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n + 3;\n        this.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  }\n\n  /**\n   * @param {Array<number>} p0 Last coordinates.\n   * @param {Array<number>} p1 Current coordinates.\n   * @param {Array<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  addVertices_(p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  }\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  isValid_(flatCoordinates, offset, end, stride) {\n    const range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      const firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      const lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    let flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const indexCount = this.indices.length;\n    const ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          const lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this.origin[0], -this.origin[1]);\n          this.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  drawPolygonCoordinates(flatCoordinates, holeFlatCoordinates, stride) {\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      let i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  setPolygonStyle(feature, opt_index) {\n    const index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  }\n\n  /**\n   * @return {number} Current index.\n   */\n  getCurrentIndex() {\n    return this.indices.length;\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  setStrokeStyle_(gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    let strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    let strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    let strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  }\n}\n\n\nexport default WebGLLineStringReplay;\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_color = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n\n  /**\n   * @param {boolean=} opt_circular The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(opt_circular) {\n\n    /**\n     * @private\n     * @type {module:ol/structs/LinkedList~Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {module:ol/structs/LinkedList~Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {module:ol/structs/LinkedList~Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n\n    /** @type {module:ol/structs/LinkedList~Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n  * Sets the cursor to the last item, and returns the associated data.\n  *\n  * @return {?} Item data.\n  */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n\n}\n\n\nexport default LinkedList;\n","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\nclass WebGLPolygonReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  /**\n   * Draw one polygon.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawCoordinates_(flatCoordinates, holeFlatCoordinates, stride) {\n    // Triangulate the polygon\n    const outerRing = new LinkedList();\n    const rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    const maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      let i, ii;\n      const holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        const holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        const currList = holeLists[i].list;\n        const start = currList.firstItem();\n        let currItem = start;\n        let intersection;\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  }\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {module:ol/structs/LinkedList} list Linked list.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  processFlatCoordinates_(flatCoordinates, stride, list, rtree, clockwise) {\n    const isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    let i, ii;\n    let n = this.vertices.length / 2;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let start;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let p0;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let p1;\n    const extents = [];\n    const segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      const end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  }\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygons ring.\n   * @return {Array<number>} Max X coordinates.\n   */\n  getMaxCoords_(list) {\n    const start = list.firstItem();\n    let seg = start;\n    let maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  }\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  classifyPoints_(list, rtree, ccw) {\n    let start = list.firstItem();\n    let s0 = start;\n    let s1 = list.nextItem();\n    let pointsReclassified = false;\n    do {\n      const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  bridgeHole_(hole, holeMaxX, list, listMaxX, rtree) {\n    let seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    const p1 = seg.p1;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    const p2 = {x: listMaxX, y: p1.y, i: -1};\n    let minDist = Infinity;\n    let i, ii, bestPoint;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let p5;\n\n    const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      const currSeg = intersectingSegments[i];\n      const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      const dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        let theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          const currPoint = pointsInTriangle[i];\n          const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  triangulate_(list, rtree) {\n    let ccw = false;\n    let simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this.resolveSelfIntersections_(list, rtree)) {\n              simple = this.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this.isClockwise_(list);\n                this.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      let numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  clipEars_(list, rtree, simple, ccw) {\n    let numIndices = this.indices.length;\n    let start = list.firstItem();\n    let s0 = list.getPrevItem();\n    let s1 = start;\n    let s2 = list.nextItem();\n    let s3 = list.getNextItem();\n    let p0, p1, p2;\n    let processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        let variableCriterion;\n        if (simple) {\n          variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this.indices[numIndices++] = p0.i;\n            this.indices[numIndices++] = p1.i;\n            this.indices[numIndices++] = p2.i;\n            this.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  resolveSelfIntersections_(list, rtree, opt_touch) {\n    const start = list.firstItem();\n    list.nextItem();\n    let s0 = start;\n    let s1 = list.nextItem();\n    let resolvedIntersections = false;\n\n    do {\n      const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        let breakCond = false;\n        const numVertices = this.vertices.length;\n        let numIndices = this.indices.length;\n        const n = numVertices / 2;\n        const seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        let p;\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this.indices[numIndices++] = seg.p0.i;\n        this.indices[numIndices++] = seg.p1.i;\n        this.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  isSimple_(list, rtree) {\n    const start = list.firstItem();\n    let seg = start;\n    do {\n      if (this.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  isClockwise_(list) {\n    const length = list.getLength() * 2;\n    const flatCoordinates = new Array(length);\n    const start = list.firstItem();\n    let seg = start;\n    let i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  splitPolygon_(list, rtree) {\n    const start = list.firstItem();\n    let s0 = start;\n    do {\n      const intersections = this.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        const s1 = intersections[0];\n        const n = this.vertices.length / 2;\n        const intersection = this.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        const p = this.createPoint_(intersection[0], intersection[1], n);\n        const newPolygon = new LinkedList();\n        const newRtree = new RBush();\n        this.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        let currItem = list.nextItem();\n        while (currItem !== s1) {\n          this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this.classifyPoints_(list, rtree, false);\n        this.triangulate_(list, rtree);\n        this.classifyPoints_(newPolygon, newRtree, false);\n        this.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  }\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n   */\n  createPoint_(x, y, i) {\n    let numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    const p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n   */\n  insertItem_(p0, p1, list, opt_rtree) {\n    const seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  }\n\n  /**\n    * @private\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n    * @param {module:ol/structs/LinkedList} list Polygon ring.\n    * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n    */\n  removeItem_(s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n   */\n  getPointsInTriangle_(p0, p1, p2, rtree, opt_reflex) {\n    const result = [];\n    const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (const j in segmentsInExtent[i]) {\n        const p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n   */\n  getIntersections_(segment, rtree, opt_touch) {\n    const p0 = segment.p0;\n    const p1 = segment.p1;\n    const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    const result = [];\n    for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      const currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<number>|undefined} Intersection coordinates.\n   */\n  calculateIntersection_(p0, p1, p2, p3, opt_touch) {\n    const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  diagonalIsInside_(p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const endss = multiPolygonGeometry.getEndss();\n    const stride = multiPolygonGeometry.getStride();\n    const currIndex = this.indices.length;\n    const currLineIndex = this.lineStringReplay.getCurrentIndex();\n    const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    let i, ii, j, jj;\n    let start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      if (ends.length > 0) {\n        const outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this.origin[0], -this.origin[1]);\n        if (outerRing.length) {\n          const holes = [];\n          let holeFlatCoords;\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this.origin[0], -this.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const ends = polygonGeometry.getEnds();\n    const stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      const outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, nextStyle);\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  setFillStyle_(gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      const nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        lineWidth: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  }\n}\n\n\nexport default WebGLPolygonReplay;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nclass Atlas {\n\n  /**\n   * @param {number} size The size in pixels of the sprite image.\n   * @param {number} space The space in pixels between images.\n   *    Because texture coordinates are float values, the edges of\n   *    images might not be completely correct (in a way that the\n   *    edges overlap when being rendered). To avoid this we add a\n   *    padding around each image.\n   */\n  constructor(size, space) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.space_ = space;\n\n    /**\n     * @private\n     * @type {Array<module:ol/style/Atlas~AtlasBlock>}\n     */\n    this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/style/Atlas~AtlasInfo>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(size, size);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n  }\n\n  /**\n   * @param {string} id The identifier of the entry to check.\n   * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n   */\n  get(id) {\n    return this.entries_[id] || null;\n  }\n\n  /**\n   * @param {string} id The identifier of the entry to add.\n   * @param {number} width The width.\n   * @param {number} height The height.\n   * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n   *    Called to render the new image onto an atlas image.\n   * @param {Object=} opt_this Value to use as `this` when executing\n   *    `renderCallback`.\n   * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n   */\n  add(id, width, height, renderCallback, opt_this) {\n    for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n      const block = this.emptyBlocks_[i];\n      if (block.width >= width + this.space_ &&\n          block.height >= height + this.space_) {\n        // we found a block that is big enough for our entry\n        const entry = {\n          offsetX: block.x + this.space_,\n          offsetY: block.y + this.space_,\n          image: this.canvas_\n        };\n        this.entries_[id] = entry;\n\n        // render the image on the atlas image\n        renderCallback.call(opt_this, this.context_,\n          block.x + this.space_, block.y + this.space_);\n\n        // split the block after the insertion, either horizontally or vertically\n        this.split_(i, block, width + this.space_, height + this.space_);\n\n        return entry;\n      }\n    }\n\n    // there is no space for the new entry in this atlas\n    return null;\n  }\n\n  /**\n   * @private\n   * @param {number} index The index of the block.\n   * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n   * @param {number} width The width of the entry to insert.\n   * @param {number} height The height of the entry to insert.\n   */\n  split_(index, block, width, height) {\n    const deltaWidth = block.width - width;\n    const deltaHeight = block.height - height;\n\n    /** @type {module:ol/style/Atlas~AtlasBlock} */\n    let newBlock1;\n    /** @type {module:ol/style/Atlas~AtlasBlock} */\n    let newBlock2;\n\n    if (deltaWidth > deltaHeight) {\n      // split vertically\n      // block right of the inserted entry\n      newBlock1 = {\n        x: block.x + width,\n        y: block.y,\n        width: block.width - width,\n        height: block.height\n      };\n\n      // block below the inserted entry\n      newBlock2 = {\n        x: block.x,\n        y: block.y + height,\n        width: width,\n        height: block.height - height\n      };\n      this.updateBlocks_(index, newBlock1, newBlock2);\n    } else {\n      // split horizontally\n      // block right of the inserted entry\n      newBlock1 = {\n        x: block.x + width,\n        y: block.y,\n        width: block.width - width,\n        height: height\n      };\n\n      // block below the inserted entry\n      newBlock2 = {\n        x: block.x,\n        y: block.y + height,\n        width: block.width,\n        height: block.height - height\n      };\n      this.updateBlocks_(index, newBlock1, newBlock2);\n    }\n  }\n\n  /**\n   * Remove the old block and insert new blocks at the same array position.\n   * The new blocks are inserted at the same position, so that splitted\n   * blocks (that are potentially smaller) are filled first.\n   * @private\n   * @param {number} index The index of the block to remove.\n   * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n   * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n   */\n  updateBlocks_(index, newBlock1, newBlock2) {\n    const args = [index, 1];\n    if (newBlock1.width > 0 && newBlock1.height > 0) {\n      args.push(newBlock1);\n    }\n    if (newBlock2.width > 0 && newBlock2.height > 0) {\n      args.push(newBlock2);\n    }\n    this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n  }\n}\n\nexport default Atlas;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nclass AtlasManager {\n  /**\n   * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * The size in pixels of the latest atlas image.\n     * @private\n     * @type {number}\n     */\n    this.currentSize_ = options.initialSize !== undefined ?\n      options.initialSize : INITIAL_ATLAS_SIZE;\n\n    /**\n     * The maximum size in pixels of atlas images.\n     * @private\n     * @type {number}\n     */\n    this.maxSize_ = options.maxSize !== undefined ?\n      options.maxSize : MAX_ATLAS_SIZE != -1 ?\n        MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n          WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n    /**\n     * The size in pixels between images.\n     * @private\n     * @type {number}\n     */\n    this.space_ = options.space !== undefined ? options.space : 1;\n\n    /**\n     * @private\n     * @type {Array<module:ol/style/Atlas>}\n     */\n    this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n    /**\n     * The size in pixels of the latest atlas image for hit-detection images.\n     * @private\n     * @type {number}\n     */\n    this.currentHitSize_ = this.currentSize_;\n\n    /**\n     * @private\n     * @type {Array<module:ol/style/Atlas>}\n     */\n    this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n  }\n\n  /**\n   * @param {string} id The identifier of the entry to check.\n   * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n   *    entry, or `null` if the entry is not part of the atlas manager.\n   */\n  getInfo(id) {\n    /** @type {?module:ol/style/Atlas~AtlasInfo} */\n    const info = this.getInfo_(this.atlases_, id);\n\n    if (!info) {\n      return null;\n    }\n    const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n    return this.mergeInfos_(info, hitInfo);\n  }\n\n  /**\n   * @private\n   * @param {Array<module:ol/style/Atlas>} atlases The atlases to search.\n   * @param {string} id The identifier of the entry to check.\n   * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n   *    or `null` if the entry is not part of the atlases.\n   */\n  getInfo_(atlases, id) {\n    for (let i = 0, ii = atlases.length; i < ii; ++i) {\n      const atlas = atlases[i];\n      const info = atlas.get(id);\n      if (info) {\n        return info;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n   * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n   *    image.\n   * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n   *    entry, or `null` if the entry is not part of the atlases.\n   */\n  mergeInfos_(info, hitInfo) {\n    return (\n      /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n        offsetX: info.offsetX,\n        offsetY: info.offsetY,\n        image: info.image,\n        hitImage: hitInfo.image\n      })\n    );\n  }\n\n  /**\n   * Add an image to the atlas manager.\n   *\n   * If an entry for the given id already exists, the entry will\n   * be overridden (but the space on the atlas graphic will not be freed).\n   *\n   * If `renderHitCallback` is provided, the image (or the hit-detection version\n   * of the image) will be rendered into a separate hit-detection atlas image.\n   *\n   * @param {string} id The identifier of the entry to add.\n   * @param {number} width The width.\n   * @param {number} height The height.\n   * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n   *    Called to render the new image onto an atlas image.\n   * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n   *    detection atlas image.\n   * @param {Object=} opt_this Value to use as `this` when executing\n   *    `renderCallback` and `renderHitCallback`.\n   * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n   *    entry, or `null` if the image is too big.\n   */\n  add(id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n    if (width + this.space_ > this.maxSize_ ||\n        height + this.space_ > this.maxSize_) {\n      return null;\n    }\n\n    /** @type {?module:ol/style/Atlas~AtlasInfo} */\n    const info = this.add_(false, id, width, height, renderCallback, opt_this);\n    if (!info) {\n      return null;\n    }\n\n    // even if no hit-detection entry is requested, we insert a fake entry into\n    // the hit-detection atlas, to make sure that the offset is the same for\n    // the original image and the hit-detection image.\n    const renderHitCallback = opt_renderHitCallback !== undefined ?\n      opt_renderHitCallback : VOID;\n\n    const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n      id, width, height, renderHitCallback, opt_this));\n\n    return this.mergeInfos_(info, hitInfo);\n  }\n\n  /**\n   * @private\n   * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n   * @param {string} id The identifier of the entry to add.\n   * @param {number} width The width.\n   * @param {number} height The height.\n   * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n   *    Called to render the new image onto an atlas image.\n   * @param {Object=} opt_this Value to use as `this` when executing\n   *    `renderCallback` and `renderHitCallback`.\n   * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n   *    or `null` if the image is too big.\n   */\n  add_(isHitAtlas, id, width, height, renderCallback, opt_this) {\n    const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n    let atlas, info, i, ii;\n    for (i = 0, ii = atlases.length; i < ii; ++i) {\n      atlas = atlases[i];\n      info = atlas.add(id, width, height, renderCallback, opt_this);\n      if (info) {\n        return info;\n      } else if (!info && i === ii - 1) {\n        // the entry could not be added to one of the existing atlases,\n        // create a new atlas that is twice as big and try to add to this one.\n        let size;\n        if (isHitAtlas) {\n          size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n          this.currentHitSize_ = size;\n        } else {\n          size = Math.min(this.currentSize_ * 2, this.maxSize_);\n          this.currentSize_ = size;\n        }\n        atlas = new Atlas(size, this.space_);\n        atlases.push(atlas);\n        // run the loop another time\n        ++ii;\n      }\n    }\n    return null;\n  }\n}\n\nexport default AtlasManager;\n","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object<string, number>} width\n * @property {number} height\n */\n\n\nclass WebGLTextReplay extends WebGLTextureReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (module:ol/colorlike~ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    if (this.text_) {\n      let flatCoordinates = null;\n      const offset = 0;\n      let end = 2;\n      let stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      const glyphAtlas = this.currAtlas_;\n      const lines = this.text_.split('\\n');\n      const textSize = this.getTextSize_(lines);\n      let i, ii, j, jj, currX, currY, charArr, charInfo;\n      const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            const image = charInfo.image;\n\n            this.anchorX = anchorX - currX;\n            this.anchorY = anchorY - currY;\n            this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this.originY = charInfo.offsetY;\n            this.height = glyphAtlas.height;\n            this.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this.imageHeight = image.height;\n            this.imageWidth = image.width;\n\n            if (this.images_.length === 0) {\n              this.images_.push(image);\n            } else {\n              const currentImage = this.images_[this.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this.groupIndices.push(this.indices.length);\n                this.images_.push(image);\n              }\n            }\n\n            this.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this.width;\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Array<string>} lines Label to draw split to lines.\n   * @return {Array<number>} Size of the label in pixels.\n   */\n  getTextSize_(lines) {\n    const self = this;\n    const glyphAtlas = this.currAtlas_;\n    const textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    const textWidth = lines.map(function(str) {\n      let sum = 0;\n      for (let i = 0, ii = str.length; i < ii; ++i) {\n        const curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  }\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    for (let i = offset, ii = end; i < ii; i += stride) {\n      this.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  addCharToAtlas_(char) {\n    if (char.length === 1) {\n      const glyphAtlas = this.currAtlas_;\n      const state = this.state_;\n      const mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    const gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    const texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    super.finish(context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle) {\n    const state = this.state_;\n    const textFillStyle = textStyle.getFill();\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        const lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n   */\n  getAtlas_(state) {\n    let params = [];\n    for (const i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    const hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      const mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  }\n\n  /**\n   * @private\n   * @param {Array<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  calculateHash_(params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    let hash = '';\n    for (let i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTextures(opt_all) {\n    return this.textures_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionTextures() {\n    return this.textures_;\n  }\n}\n\n\nexport default WebGLTextReplay;\n","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array<number>}\n */\nconst HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nclass WebGLReplayGroup extends ReplayGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   * @param {number=} opt_renderBuffer Render buffer.\n   */\n  constructor(tolerance, maxExtent, opt_renderBuffer) {\n    super();\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string,\n     *        Object<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  /**\n   * @param {module:ol/style/Style} style Style.\n   * @param {boolean} group Group with previous replay.\n   */\n  addDeclutter(style, group) {}\n\n  /**\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  getDeleteResourcesFunction(context) {\n    const functions = [];\n    let zKey;\n    for (zKey in this.replaysByZIndex_) {\n      const replays = this.replaysByZIndex_[zKey];\n      for (const replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      const length = functions.length;\n      let result;\n      for (let i = 0; i < length; i++) {\n        result = functions[i].apply(this, arguments);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  finish(context) {\n    let zKey;\n    for (zKey in this.replaysByZIndex_) {\n      const replays = this.replaysByZIndex_[zKey];\n      for (const replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReplay(zIndex, replayType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[replayType];\n    if (replay === undefined) {\n      /**\n       * @type {Function}\n       */\n      const Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isEmpty() {\n    return isEmpty(this.replaysByZIndex_);\n  }\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  replay(\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replayHitDetection_(\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    let i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    const gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    const gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    const hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        const imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  }\n}\n\n\nexport default WebGLReplayGroup;\n","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\nclass WebGLImmediateRenderer extends VectorContext {\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(context, center, resolution, rotation, size, extent, pixelRatio) {\n    super();\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @private\n   */\n  drawText_(replayGroup, geometry) {\n    const context = this.context_;\n    const replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawGeometryCollection(geometry, data) {\n    const geometries = geometry.getGeometriesArray();\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle) {\n    this.imageStyle_ = imageStyle;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle) {\n    this.textStyle_ = textStyle;\n  }\n}\n\n\nexport default WebGLImmediateRenderer;\n","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_texCoordMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_texture = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n    /**\n     * @type {number}\n     */\n    this.a_texCoord = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\nclass WebGLLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(mapRenderer, layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {module:ol/renderer/webgl/Map}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  bindFramebuffer(frameState, framebufferDimension) {\n\n    const gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      const postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n\n      const texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      const framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  composeFrame(frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    const gl = context.getGL();\n\n    const program = context.getProgram(fragment, vertex);\n\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchComposeEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const viewState = frameState.viewState;\n      const resolution = viewState.resolution;\n      const pixelRatio = frameState.pixelRatio;\n      const extent = frameState.extent;\n      const center = viewState.center;\n      const rotation = viewState.rotation;\n      const size = frameState.size;\n\n      const render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      const composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  getTexCoordMatrix() {\n    return this.texCoordMatrix;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  getTexture() {\n    return this.texture;\n  }\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  getProjectionMatrix() {\n    return this.projectionMatrix;\n  }\n\n  /**\n   * Handle webglcontextlost.\n   */\n  handleWebGLContextLost() {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  prepareFrame(frameState, layerState, context) {}\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {}\n}\n\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {TRUE, VOID} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nclass WebGLImageLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Image} imageLayer Tile layer.\n   */\n  constructor(mapRenderer, imageLayer) {\n\n    super(mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/transform~Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/ImageBase} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  createTexture_(image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    const imageElement = image.getImage();\n    const gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n\n    const gl = this.mapRenderer.getGL();\n\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const viewRotation = viewState.rotation;\n\n    let image = this.image_;\n    let texture = this.texture;\n    const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    const imageSource = imageLayer.getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      const image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        const loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            const postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      const canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      const texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  }\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\n   * @private\n   */\n  updateProjectionMatrix_(\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    const canvasExtentWidth = canvasWidth * viewResolution;\n    const canvasExtentHeight = canvasHeight * viewResolution;\n\n    const projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState) {\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== VOID) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      const coordinate = applyTransform(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n      const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n      if (hasFeature) {\n        return callback.call(thisArg, this.getLayer(), null);\n      } else {\n        return undefined;\n      }\n    } else {\n      const imageSize =\n          [this.image_.getImage().width, this.image_.getImage().height];\n\n      if (!this.hitTransformationMatrix_) {\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n      }\n\n      const pixelOnFrameBuffer = applyTransform(\n        this.hitTransformationMatrix_, pixel.slice());\n\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n        // outside the image, no need to check\n        return undefined;\n      }\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n      const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  }\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {module:ol/size~Size} mapSize The map size.\n   * @param {module:ol/size~Size} imageSize The image size.\n   * @return {module:ol/transform~Transform} The transformation matrix.\n   * @private\n   */\n  getHitTransformationMatrix_(mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    const mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    const transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nconst WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nclass WebGLMapRenderer extends MapRenderer {\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    const container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('canvas'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Context}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {module:ol/structs/LRUCache<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/PriorityQueue<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array<*>} element Element.\n       * @return {number} Priority.\n       * @this {module:ol/renderer/webgl/Map}\n       */\n      (function(element) {\n        const tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n        const tileResolution = /** @type {number} */ (element[2]);\n        const deltaX = tileCenter[0] - this.focus_[0];\n        const deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {module:ol/Tile} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            const element = this.tileTextureQueue_.dequeue();\n            const tile = /** @type {module:ol/Tile} */ (element[0]);\n            const tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n            const tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  bindTileTexture(tile, tileSize, tileGutter, magFilter, minFilter) {\n    const gl = this.getGL();\n    const tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      const textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      const texture = gl.createTexture();\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        const clipTileCanvas = this.clipTileContext_.canvas;\n        const clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, tile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const context = this.context_;\n\n      const extent = frameState.extent;\n      const size = frameState.size;\n      const viewState = frameState.viewState;\n      const pixelRatio = frameState.pixelRatio;\n\n      const resolution = viewState.resolution;\n      const center = viewState.center;\n      const rotation = viewState.rotation;\n\n      const vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      const composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  expireCache_(map, frameState) {\n    const gl = this.getGL();\n    let textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this.textureCache_.pop();\n    }\n  }\n\n  /**\n   * @return {module:ol/webgl/Context} The context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * @return {module:ol/structs/PriorityQueue<Array>} Tile texture queue.\n   */\n  getTileTextureQueue() {\n    return this.tileTextureQueue_;\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleWebGLContextLost(event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    const renderers = this.getLayerRenderers();\n    for (const id in renderers) {\n      const renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleWebGLContextRestored() {\n    this.initializeGL_();\n    this.getMap().render();\n  }\n\n  /**\n   * @private\n   */\n  initializeGL_() {\n    const gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  isTileTextureLoaded(tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n\n    const context = this.getContext();\n    const gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array<module:ol/layer/Layer~State>} */\n    const layerStatesToDraw = [];\n    const layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    const viewResolution = frameState.viewState.resolution;\n    let i, ii, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      layerState = layerStatesToDraw[i];\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    let hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    const viewState = frameState.viewState;\n    let result;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        const layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\n\nexport default WebGLMapRenderer;\n","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_tileOffset = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_texture = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n    /**\n     * @type {number}\n     */\n    this.a_texCoord = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Tile} tileLayer Tile layer.\n   */\n  constructor(mapRenderer, tileLayer) {\n\n    super(mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Fragment}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Vertex}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    const mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          const loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleWebGLContextLost() {\n    super.handleWebGLContextLost();\n    this.locations_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n\n    const mapRenderer = this.mapRenderer;\n    const gl = context.getGL();\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewState.resolution);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    const pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    const tilePixelResolution = tileResolution / pixelRatio;\n    const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\n\n    const center = viewState.center;\n    const extent = frameState.extent;\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    let framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      const tileRangeSize = tileRange.getSize();\n\n      const maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      const origin = tileGrid.getOrigin(z);\n      const minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      const minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object<number, Object<string, module:ol/Tile>>}\n       */\n      const tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      const findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      let allTilesLoaded = true;\n      const tmpExtent = createEmpty();\n      const tmpTileRange = new TileRange(0, 0, 0, 0);\n      let childTileRange, drawable, fullyLoaded, tile, tileState;\n      let x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array<number>} */\n      const zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      const u_tileOffset = new Float32Array(4);\n      for (let i = 0, ii = zs.length; i < ii; ++i) {\n        const tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (const tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    const tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {module:ol/Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    const pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    const pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    const pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    const gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nclass WebGLVectorLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n   */\n  constructor(mapRenderer, vectorLayer) {\n\n    super(mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?module:ol/layer/Layer~State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  composeFrame(frameState, layerState, context) {\n    this.layerState_ = layerState;\n    const viewState = frameState.viewState;\n    const replayGroup = this.replayGroup_;\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n    const gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      const context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      const context = this.mapRenderer.getContext();\n      const viewState = frameState.viewState;\n      const layer = this.getLayer();\n      const layerState = this.layerState_;\n      /** @type {!Object<string, boolean>} */\n      const features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      const context = this.mapRenderer.getContext();\n      const viewState = frameState.viewState;\n      const layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    const hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n    const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    const vectorSource = vectorLayer.getSource();\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    const replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/webgl/VectorLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    };\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<module:ol/Feature>} */\n      const features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of\n   *     styles.\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nclass WebGLMap extends PluggableMap {\n\n  /**\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    const renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  }\n}\n\n\nexport default WebGLMap;\n","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {function(module:ol/MapEvent)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @api\n */\nclass MousePosition extends Control {\n\n  /**\n   * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/proj~TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return (\n      /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {module:ol/proj/Projection|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\n    );\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?module:ol/pixel~Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n}\n\n\n/**\n * Update the mouseposition element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n}\n\n\nexport default MousePosition;\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n\n    /**\n     * @protected\n     * @type {module:ol/proj/Projection}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {module:ol/proj/Projection}\n     */\n    this.defaultFeatureProjection = null;\n\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      options = {\n        dataProjection: opt_options.dataProjection ?\n          opt_options.dataProjection : this.readProjection(source),\n        featureProjection: opt_options.featureProjection\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign({\n      dataProjection: this.dataProjection,\n      featureProjection: this.defaultFeatureProjection\n    }, options);\n  }\n\n  /**\n   * Get the extent from the source of the last {@link readFeatures} call.\n   * @return {module:ol/extent~Extent} Tile extent.\n   */\n  getLastExtent() {\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @return {module:ol/format/FormatType} Format.\n   */\n  getType() {}\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeature(source, opt_options) {}\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  readFeatures(source, opt_options) {}\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometry(source, opt_options) {}\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjection(source) {}\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {}\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {}\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {}\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  let transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    const power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {}\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {}\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {}\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromObject(object) {}\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {}\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {}\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {}\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n\n  /**\n   * @param {module:ol/format/EsriJSON~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromObject(object, opt_options) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    const options = opt_options ? opt_options : {};\n    if (esriJSONObject.features) {\n      const esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n      /** @type {Array<module:ol/Feature>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureCollection.features;\n      options.idField = object.objectIdFieldName;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n      const crs = esriJSONObject.spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const object = {};\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n          wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n        });\n      }\n    }\n    const properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureCollection} */ ({\n      'features': objects\n    });\n  }\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  let type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    const layout = getGeometryLayout(object);\n    const rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  let layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array<Array<Array<Array<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  const coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  let esriJSON;\n  const layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  const coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<module:ol/Feature>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {}\n\n  /**\n   * @inheritDoc\n   */\n  readGeometry(source, opt_options) {\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\n\nexport default XMLFeature;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nclass GMLBase extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n      'featureMember': makeReplacer(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<module:ol/Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n        features = pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      } else {\n        features = pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      }\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (const p in featureNS) {\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this.readFeatureElement, this) :\n                  makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Geometry|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {module:ol/geom/Geometry} */\n    const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    let n;\n    const fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n    const values = {};\n    let geometryName;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      // Assume attribute elements have one child node and that the child\n      // is a text or CDATA node (to be treated as text).\n      // Otherwise assume it is a geometry node.\n      if (n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        let value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n        values[localName] = value;\n      } else {\n        // boundedBy is an extent and must not be considered as a geometry\n        if (localName !== 'boundedBy') {\n          geometryName = localName;\n        }\n        values[localName] = this.readGeometryElement(n, objectStack);\n      }\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<module:ol/geom/LineString>} */\n    const lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<module:ol/geom/Polygon>} */\n    const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  pointMemberParser_(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  lineStringMemberParser_(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  polygonMemberParser_(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing_(node, objectStack) {\n    const ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode_(node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromNode(node, opt_options) {\n    const geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    const features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromNode(node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n\n  /**\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    const options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve_(node, objectStack) {\n    /** @type {Array<module:ol/geom/LineString>} */\n    const lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface_(node, objectStack) {\n    /** @type {Array<module:ol/geom/Polygon>} */\n    const polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  curveMemberParser_(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  surfaceMemberParser_(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  interiorParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  exteriorParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  readSurface_(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  readCurve_(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  readEnvelope_(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos_(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList_(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (node.parentNode.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, opt_srsName, opt_hasZ) {\n    let axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLinearRing_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiPoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeRing_(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePointMember_(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLineStringOrCurveMember_(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    const item = assign({}, context);\n    item.node = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const properties = feature.getProperties();\n    const keys = [];\n    const values = [];\n    for (const key in properties) {\n      const value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    let nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeGeometryNode(geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const geom = createElementNS('http://www.opengis.net/gml', 'geom');\n    const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from '../format/GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nconst GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n\n  /**\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    const options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates_(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  readBox_(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  innerBoundaryIsParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  outerBoundaryIsParser_(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    let nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const properties = feature.getProperties();\n    const keys = [];\n    const values = [];\n    for (const key in properties) {\n      const value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLineStringOrCurveMember_(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    const item = assign({}, context);\n    item.node = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Node} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeRing_(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, opt_srsName, opt_hasZ) {\n    let axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiPoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePointMember_(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeLinearRing_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (module:ol/Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/GPX~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(module:ol/Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<module:ol/Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<module:ol/Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n\n  /**\n   * @param {Array<module:ol/geom/Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n\n    super();\n\n    /**\n     * @private\n     * @type {Array<module:ol/geom/Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<module:ol/geom/Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<module:ol/geom/Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometries = [];\n      const geometries = this.geometries_;\n      let simplified = false;\n      for (let i = 0, ii = geometries.length; i < ii; ++i) {\n        const geometry = geometries[i];\n        const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        const simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nclass GeoJSON extends JSONFeature {\n\n  /**\n   * @param {module:ol/format/GeoJSON~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object.type === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n        type: 'Feature',\n        geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n      });\n    }\n\n    const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name);\n    }\n    feature.setGeometry(geometry);\n    if (geoJSONFeature.id !== undefined) {\n      feature.setId(geoJSONFeature.id);\n    }\n    if (geoJSONFeature.properties) {\n      feature.setProperties(geoJSONFeature.properties);\n    }\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<module:ol/Feature>} */\n    let features = null;\n    if (geoJSONObject.type === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection.features;\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    const crs = geoJSONObject.crs;\n    let projection;\n    if (crs) {\n      if (crs.type == 'name') {\n        projection = getProjection(crs.properties.name);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    const object = /** @type {GeoJSONFeature} */ ({\n      'type': 'Feature'\n    });\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    } else {\n      object.geometry = null;\n    }\n    const properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    } else {\n      object.properties = null;\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: objects\n    });\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromText(text, opt_options) {}\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {}\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {}\n\n  /**\n   * Read the projection from the source.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @function\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {}\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {}\n\n  /**\n   * Write a single geometry.\n   *\n   * @function\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {}\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nconst IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n\n  /**\n   * @param {module:ol/format/IGC~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            let z;\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  }\n\n}\n\nexport default IGC;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {module:ol/size~Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/ImageState} imageState Image state.\n   * @param {module:ol/color~Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  /**\n   * @private\n   */\n  determineTainting_() {\n    const context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  }\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  replaceColor_() {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    const ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    const data = imgData.data;\n    const r = this.color_[0] / 255.0;\n    const g = this.color_[1] / 255.0;\n    const b = this.color_[2] / 255.0;\n\n    for (let i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, module:ol/style/IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {module:ol/color~Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<module:ol/style/Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/KML~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<module:ol/style/Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<module:ol/style/Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<module:ol/Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<module:ol/Feature>} */\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle(node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readNameFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    const /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  }\n}\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<module:ol/Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<module:ol/geom/Geometry>} */\n  let geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {module:ol/style/Icon~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    const imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @override\n   */\n  listenImageChange(listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @override\n   */\n  unlistenImageChange(listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  }\n}\n\n\nexport default Icon;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/render/Feature\n */\nimport {VOID} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nclass RenderFeature {\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n    * @private\n    * @type {module:ol/extent~Extent|undefined}\n    */\n    this.extent_;\n\n    /**\n    * @private\n    * @type {number|string|undefined}\n    */\n    this.id_ = id;\n\n    /**\n    * @private\n    * @type {module:ol/geom/GeometryType}\n    */\n    this.type_ = type;\n\n    /**\n    * @private\n    * @type {Array<number>}\n    */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n    * @private\n    * @type {Array<number>}\n    */\n    this.flatInteriorPoints_ = null;\n\n    /**\n    * @private\n    * @type {Array<number>}\n    */\n    this.flatMidpoints_ = null;\n\n    /**\n    * @private\n    * @type {Array<number>|Array<Array<number>>}\n    */\n    this.ends_ = ends;\n\n    /**\n    * @private\n    * @type {Object<string, *>}\n    */\n    this.properties_ = properties;\n\n  }\n\n  /**\n  * Get a feature property by its key.\n  * @param {string} key Key\n  * @return {*} Value for the requested key.\n  * @api\n  */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n  * Get the extent of this feature's geometry.\n  * @return {module:ol/extent~Extent} Extent.\n  * @api\n  */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ = this.type_ === GeometryType.POINT ?\n        createOrUpdateFromCoordinate(this.flatCoordinates_) :\n        createOrUpdateFromFlatCoordinates(\n          this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n    }\n    return this.extent_;\n  }\n\n  /**\n  * @return {Array<number>} Flat interior points.\n  */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n  * @return {Array<number>} Flat interior points.\n  */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_, 0, this.ends_, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n  * @return {Array<number>} Flat midpoint.\n  */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n  * @return {Array<number>} Flat midpoints.\n  */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = this.ends_;\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(\n          flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n  * Get the feature identifier.  This is a stable identifier for the feature and\n  * is set when reading data from a remote source.\n  * @return {number|string|undefined} Id.\n  * @api\n  */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n  * @return {Array<number>} Flat coordinates.\n  */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n  * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n  * determining the geometry type in style function (see {@link #getType}).\n  * @return {module:ol/render/Feature} Feature.\n  * @api\n  */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n  * Get the feature properties.\n  * @return {Object<string, *>} Feature properties.\n  * @api\n  */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n  * @return {number} Stride.\n  */\n  getStride() {\n    return 2;\n  }\n\n  /**\n  * Get the type of this feature's geometry.\n  * @return {module:ol/geom/GeometryType} Geometry type.\n  * @api\n  */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n  * Transform geometry coordinates from tile pixel space to projected.\n  * The SRS of the source and destination are expected to be the same.\n  *\n  * @param {module:ol/proj~ProjectionLike} source The current projection\n  * @param {module:ol/proj~ProjectionLike} destination The desired projection.\n  */\n  transform(source, destination) {\n    source = getProjection(source);\n    const pixelExtent = source.getExtent();\n    const projectedExtent = source.getWorldExtent();\n    const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n    composeTransform(tmpTransform,\n      projectedExtent[0], projectedExtent[3],\n      scale, -scale, 0,\n      0, 0);\n    transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n      tmpTransform, this.flatCoordinates_);\n  }\n}\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = VOID;\n\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object<string,*>)=)|function(module:ol/geom/GeometryType,Array<number>,(Array<number>|Array<Array<number>>),Object<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n\n  /**\n   * @param {module:ol/format/MVT~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/proj/Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {function((module:ol/geom/Geometry|Object<string,*>)=)|\n     *     function(module:ol/geom/GeometryType,Array<number>,\n     *         (Array<number>|Array<Array<number>>),Object<string,*>,number)}\n     */\n    this.featureClass_ = options.featureClass ?\n      options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n   */\n  createFeature_(pbf, rawFeature, opt_options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const id = rawFeature.id;\n    const values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = [];\n    const ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      let geom;\n      if (geometryType == GeometryType.POLYGON) {\n        const endss = [];\n        let offset = 0;\n        let prevEndIndex = 0;\n        for (let i = 0, ii = ends.length; i < ii; ++i) {\n          const end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      feature = new this.featureClass_();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getLastExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.ARRAY_BUFFER;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    const layers = this.layers_;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<module:ol/Feature|module:ol/render/Feature>} */\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature));\n      }\n      this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n}\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst WAY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n  });\n\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = this.getReadOptions(node, opt_options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop({\n        nodes: {},\n        ways: [],\n        features: []\n      }, PARSERS, node, [options]);\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = [];\n        for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          const point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n        } else {\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        transformWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        feature.setId(values.id);\n        feature.setProperties(values.tags);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst NODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'tag': readTag\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {module:ol/coordinate~Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop({\n    tags: {}\n  }, NODE_PARSERS, node, objectStack);\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    feature.setId(id);\n    feature.setProperties(values.tags);\n    state.features.push(feature);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop({\n    id: id,\n    ndrefs: [],\n    tags: {}\n  }, WAY_PARSERS, node, objectStack);\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\n\nexport default OSMXML;\n","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n\n  /**\n   * @param {module:ol/format/Polyline~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry = /** @type {module:ol/geom/LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n\n  /**\n   * @param {module:ol/format/TopoJSON~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform, scale = null, translate = null;\n      if (topoJSONTopology.transform) {\n        transform = topoJSONTopology.transform;\n        scale = transform.scale;\n        translate = transform.translate;\n      }\n      const arcs = topoJSONTopology.arcs;\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<module:ol/Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology.objects;\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n\n}\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  const coordinates = [];\n  let index, arc;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object.arcs[i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  const geometries = collection.geometries;\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  let geometry;\n  const type = object.type;\n  const geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  const feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @returns {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {...module:ol/format/filter/Filter} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n\n    super(tagName);\n\n    /**\n     * @type {Array<module:ol/format/filter/Filter>}\n     */\n    this.conditions = Array.prototype.slice.call(arguments, 1);\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n\n  /**\n   * @param {...module:ol/format/filter/Filter} conditions Conditions.\n   */\n  constructor(conditions) {\n    const params = ['And'].concat(Array.prototype.slice.call(arguments));\n    super(...params);\n  }\n\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/extent~Extent} extent Extent.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, opt_srsName) {\n\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nclass Spatial extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(tagName, geometryName, geometry, opt_srsName) {\n\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {module:ol/geom/Geometry}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n}\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nclass Contains extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n\n    super('Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n}\n\nexport default Contains;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nclass Comparison extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(tagName, propertyName) {\n\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n}\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/During\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nclass During extends Comparison {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} begin The begin date in ISO-8601 format.\n   * @param {!string} end The end date in ISO-8601 format.\n   */\n  constructor(propertyName, begin, end) {\n    super('During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n}\n\nexport default During;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nclass ComparisonBinary extends Comparison {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(tagName, propertyName, expression, opt_matchCase) {\n\n    super(tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n}\n\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nclass EqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(propertyName, expression, opt_matchCase) {\n    super('PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n}\n\nexport default EqualTo;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nclass GreaterThan extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThan', propertyName, expression);\n  }\n\n}\n\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nclass GreaterThanOrEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n}\n\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nclass Intersects extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n    super('Intersects', geometryName, geometry, opt_srsName);\n  }\n\n}\n\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nclass IsBetween extends Comparison {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n  constructor(propertyName, lowerBoundary, upperBoundary) {\n    super('PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n}\n\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nclass IsLike extends Comparison {\n\n  /**\n   * [constructor description]\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} pattern Text pattern.\n   * @param {string=} opt_wildCard Pattern character which matches any sequence of\n   *    zero or more string characters. Default is '*'.\n   * @param {string=} opt_singleChar pattern character which matches any single\n   *    string character. Default is '.'.\n   * @param {string=} opt_escapeChar Escape character which can be used to escape\n   *    the pattern characters. Default is '!'.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    super('PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n}\n\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nclass IsNull extends Comparison {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(propertyName) {\n    super('PropertyIsNull', propertyName);\n  }\n\n}\n\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nclass LessThan extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThan', propertyName, expression);\n  }\n\n}\n\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nclass LessThanOrEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n}\n\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nclass Not extends Filter {\n\n  /**\n   * @param {!module:ol/format/filter/Filter} condition Filter condition.\n   */\n  constructor(condition) {\n\n    super('Not');\n\n    /**\n     * @type {!module:ol/format/filter/Filter}\n     */\n    this.condition = condition;\n\n  }\n\n}\n\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nclass NotEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(propertyName, expression, opt_matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n}\n\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nclass Or extends LogicalNary {\n\n  /**\n   * @param {...module:ol/format/filter/Filter} conditions Conditions.\n   */\n  constructor(conditions) {\n    const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n    super(...params);\n  }\n\n}\n\nexport default Or;\n","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nclass Within extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n    super('Within', geometryName, geometry, opt_srsName);\n  }\n\n}\n\nexport default Within;\n","/**\n * @module ol/format/filter\n */\nimport And from '../format/filter/And.js';\nimport Bbox from '../format/filter/Bbox.js';\nimport Contains from '../format/filter/Contains.js';\nimport During from '../format/filter/During.js';\nimport EqualTo from '../format/filter/EqualTo.js';\nimport GreaterThan from '../format/filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\nimport Intersects from '../format/filter/Intersects.js';\nimport IsBetween from '../format/filter/IsBetween.js';\nimport IsLike from '../format/filter/IsLike.js';\nimport IsNull from '../format/filter/IsNull.js';\nimport LessThan from '../format/filter/LessThan.js';\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\nimport Not from '../format/filter/Not.js';\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\nimport Or from '../format/filter/Or.js';\nimport Within from '../format/filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!module:ol/format/filter/During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {module:ol/extent~Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nconst OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nconst WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nconst FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/WFS~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {module:ol/format/GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const context = /** @type {module:ol/xml~NodeStackItem} */ ({\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    const objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    let features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(n);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(n);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    let filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', options.maxFeatures);\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', options.startIndex);\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', options.count);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        const bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {module:ol/xml~NodeStackItem} */\n    const context = {\n      node: node,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    };\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<module:ol/Feature>} inserts The features to insert.\n   * @param {Array<module:ol/Feature>} updates The features to update.\n   * @param {Array<module:ol/Feature>} deletes The features to delete.\n   * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const node = createElementNS(WFSNS, 'Transaction');\n    const version = options.version ? options.version : DEFAULT_VERSION;\n    const gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {module:ol/xml~NodeStackItem} */\n    let obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    const schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    const featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const filter = createElementNS(OGCNS, 'Filter');\n  const child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const name = createElementNS(WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Bbox} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Contains} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Intersects} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Within} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/During} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  const valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Not} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsNull} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsBetween} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsLike} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  const property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  const child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {};\nfor (const type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false;\n    return c >= '0' && c <= '9' || c == '.' && !decimal;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!module:ol/format/WKT~Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const token = {position: this.index_, value: c};\n\n    if (c == '(') {\n      token.type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      token.type = TokenType.COMMA;\n    } else if (c == ')') {\n      token.type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      token.type = TokenType.NUMBER;\n      token.value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      token.type = TokenType.TEXT;\n      token.value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      token.type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return token;\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n        // if we haven't detected a scientific number before, 'e' or 'E'\n        // hint that we should continue to read\n        !scientificNotation && (c == 'e' || c == 'E') ||\n        // once we know that we have a scientific number, both '-' and '+'\n        // are allowed\n        scientificNotation && (c == '-' || c == '+')\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n\n  /**\n   * @param {module:ol/format/WKT~Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n\n    /**\n     * @type {module:ol/format/WKT~Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {module:ol/format/WKT~Token}\n     * @private\n     */\n    this.token_;\n\n    /**\n     * @type {module:ol/geom/GeometryLayout}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY;\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {module:ol/format/WKT~TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type;\n    return isMatch;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {module:ol/format/WKT~TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {module:ol/geom/Geometry} The geometry.\n   */\n  parse() {\n    this.consume_();\n    const geometry = this.parseGeometry_();\n    return geometry;\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {module:ol/geom/GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY;\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = GeometryLayout.XYZ;\n      } else if (dimInfo === M) {\n        layout = GeometryLayout.XYM;\n      } else if (dimInfo === ZM) {\n        layout = GeometryLayout.XYZM;\n      }\n      if (layout !== GeometryLayout.XY) {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {!Array<module:ol/geom/Geometry>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return null;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All linestring points\n   *                                        in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(token.value);\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty = this.isTokenType(TokenType.TEXT) &&\n        this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return 'Unexpected `' + this.token_.value + '` at position ' +\n        this.token_.position + ' in `' + this.lexer_.wkt + '`';\n  }\n\n  /**\n   * @return {!module:ol/geom/Geometry} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value;\n      this.layout_ = this.parseGeometryLayout_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        const ctor = GeometryConstructor[geomType];\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        let coordinates;\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default: {\n            throw new Error('Invalid geometry type: ' + geomType);\n          }\n        }\n\n        if (!coordinates) {\n          if (ctor === GeometryConstructor['POINT']) {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        }\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n\n  /**\n   * @param {module:ol/format/WKT~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {module:ol/geom/Geometry|undefined}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      const feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromText(text, opt_options) {\n    const geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeaturesText(features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometryText(geometry, opt_options) {\n    return encode(/** @type {module:ol/geom/Geometry} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  }\n}\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    const dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Node|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {}\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from '../format/xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/extent~Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/WMSGetFeatureInfo~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {module:ol/format/GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<module:ol/Feature>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<module:ol/Feature>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layer.localName.replace(toRemove, '');\n\n        if (this.layers_ && !includes(this.layers_, layerName)) {\n          continue;\n        }\n\n        const featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layer.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [], parsersNS, layer, objectStack, this.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  }\n\n}\n\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/OWS\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n  * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {module:ol/format/OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    const version = node.getAttribute('version').trim();\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {module:ol/layer/Heatmap~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    const weight = options.weight ? options.weight : 'weight';\n    let weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      const weight = weightFunction(feature);\n      const opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      const index = (255 * opacity) | 0;\n      let style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  createCircle_() {\n    const radius = this.getRadius();\n    const blur = this.getBlur();\n    const halfSize = radius + blur + 1;\n    const size = 2 * halfSize;\n    const context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    const center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * @private\n   */\n  handleStyleChanged_() {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  handleRender_(event) {\n    const context = event.context;\n    const canvas = context.canvas;\n    const image = context.getImageData(0, 0, canvas.width, canvas.height);\n    const view8 = image.data;\n    for (let i = 0, ii = view8.length; i < ii; i += 4) {\n      const alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n}\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nclass ImageLayer extends Layer {\n\n  /**\n   * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends Layer {\n  /**\n   * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  }\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nclass VectorTileLayer extends VectorLayer {\n  /**\n   * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  }\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super(opt_highWaterMark);\n\n  }\n\n  /**\n   * @param {!Object<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      const zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  }\n}\n\n\nexport default TileCache;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<module:ol/coordinate~Coordinate>} source\n * @property {Array<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n\n  /**\n   * @param {module:ol/proj/Projection} sourceProj Source projection.\n   * @param {module:ol/proj/Projection} targetProj Target projection.\n   * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n   * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   */\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n    /**\n     * @type {module:ol/proj/Projection}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {module:ol/proj/Projection}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, module:ol/coordinate~Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {module:ol/coordinate~Coordinate} c A coordinate.\n     * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function(c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<module:ol/reproj/Triangulation~Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n        !!maxSourceExtent &&\n        !!this.sourceProj_.getExtent() &&\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n      getWidth(this.sourceProj_.getExtent()) : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n      getWidth(this.targetProj_.getExtent()) : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      MAX_SUBDIVISION);\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function(triangle, i, arr) {\n        leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(function(triangle) {\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]]];\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          const maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      }.bind(this));\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n   * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n   * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n   * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n   * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n   * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c]\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n   * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n   * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n   * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n   * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n   * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n   * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n   * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_ ?\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX = this.sourceProj_.canWrapX() &&\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision |=\n            targetCoverageX > MAX_TRIANGLE_WIDTH;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision |=\n            sourceCoverageX > MAX_TRIANGLE_WIDTH;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n        // whole quad outside source projection extent -> ignore\n        return;\n      }\n    }\n\n    if (!needsSubdivision) {\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          return;\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n              (modulo(aSrc[0], sourceWorldWidth) +\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\n          dx = centerSrcEstimX -\n              modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n          this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n          this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {module:ol/extent~Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function(triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {module:ol/proj/Projection} sourceProj Source projection.\n   * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n   * @param {module:ol/proj/Projection} targetProj Target projection.\n   * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n   * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              const state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\n\nexport default ReprojTile;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n   */\n  constructor(options) {\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(isSorted(this.resolutions_, function(a, b) {\n      return b - a;\n    }, true), 17); // `resolutions` must be sorted in descending order\n\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<module:ol/coordinate~Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined &&\n        !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|module:ol/size~Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|module:ol/size~Size}\n     */\n    this.tileSize_ = options.tileSize !== undefined ?\n      options.tileSize :\n      !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n\n    /**\n     * @private\n     * @type {Array<module:ol/TileRange>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function(size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in `callback`.\n   * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n   * @return {boolean} Callback succeeded.\n   * @template T\n   */\n  forEachTileCoordParentTileRange(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n      }\n      if (callback.call(opt_this, z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {module:ol/coordinate~Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n   * @return {module:ol/TileRange} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n   * @return {module:ol/TileRange} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n    return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @return {module:ol/coordinate~Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n    let tileCoordX = scale * xFromOrigin / tileSize[0];\n    let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|module:ol/size~Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\n\nimport {VOID} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {}\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.tileCache.clear();\n    this.changed();\n  }\n}\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = VOID;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/Tile} tile The tile.\n   */\n  constructor(type, tile) {\n\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {module:ol/Tile} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {module:ol/source/TileImage~Options=} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutterForProjection(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getOpaque(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        const newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {module:ol/source/BingMaps~Options=} options Bing Maps options.\n   */\n  constructor(options) {\n\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {module:ol/proj/Projection} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        const attributions = [];\n        const zoom = frameState.viewState.zoom;\n        resource.imageryProviders.map(function(imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState(SourceState.READY);\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {module:ol/source/CartoDB~Options=} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      state: SourceState.LOADING,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState(SourceState.ERROR);\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\n\nexport default CartoDB;\n","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {module:ol/source/Cluster~Options=} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<module:ol/Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {module:ol/geom/Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      const geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n      assert(geometry instanceof Point,\n        10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {module:ol/source/Vector} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  }\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.distance = distance;\n    this.refresh();\n  }\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    super.refresh();\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature).toString() in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          let neighbors = this.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            const uid = getUid(neighbor).toString();\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.features.push(this.createCluster(neighbors));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<module:ol/Feature>} features Features\n   * @return {module:ol/Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    const cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  }\n}\n\n\nexport default Cluster;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n   * @param {module:ol/proj/Projection} targetProj Target projection.\n   * @param {module:ol/extent~Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   */\n  constructor(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    let state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {module:ol/ImageBase}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            const sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  }\n}\n\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\n\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nclass ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/Image} image The image.\n   */\n  constructor(type, image) {\n\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {module:ol/Image}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {module:ol/source/Image~Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {module:ol/reproj/Image}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {}\n\n  /**\n   * Handle image change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {module:ol/Image} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  }\n}\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {module:ol/source/ImageArcGISRest~Options=} opt_options Image ArcGIS Rest Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = this.ratio_ * getWidth(extent) / 2;\n      const halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {module:ol/source/ImageCanvas~Options=} options ImageCanvas options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {module:ol/source/ImageCanvas~FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {module:ol/ImageCanvas}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  /**\n  * @inheritDoc\n  */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_(\n      extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {module:ol/source/ImageMapGuide~Options=} options ImageMapGuide options.\n   */\n  constructor(options) {\n\n    super({\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {module:ol/source/ImageStatic~Options=} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    const /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  /**\n   * Returns the image extent\n   * @return {module:ol/extent~Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const resolution = getHeight(imageExtent) / imageHeight;\n      const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        const context = createCanvasContext2D(targetWidth, imageHeight);\n        const canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\n\nexport default Static;\n","/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    const requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    const url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n}\n\nexport default OSM;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nclass RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Object} data An object made available to operations.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {module:ol/source/Raster~Options=} options Options.\n   */\n  constructor(options) {\n    super({});\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Raster~RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<module:ol/renderer/canvas/Layer>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this.renderers_[r], EventType.CHANGE,\n        this.changed, this);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    const layerStatesArray = getLayerStatesArray(this.renderers_);\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {module:ol/PluggableMap~FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {module:ol/ImageCanvas}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {module:ol/View~State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  /**\n   * Set the operation.\n   * @param {module:ol/source/Raster~Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {module:ol/extent~Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {module:ol/proj/Projection} projection The view projection.\n   * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n\n    const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n    const center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.renderers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const imageData = getImageData(\n        this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  }\n\n  /**\n   * @override\n   */\n  getImageInternal() {\n    return null; // not implemented\n  }\n}\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array<module:ol/source/Source>} sources The sources.\n * @return {Array<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {module:ol/source/Stamen~Options=} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {module:ol/source/TileArcGISRest~Options=} opt_options Tile ArcGIS Rest options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  fixedTileUrlFunction(tileCoord, pixelRatio, projection) {\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(\n      tileCoord, this.tmpExtent_);\n    let tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n}\n\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nclass LabeledTile extends Tile {\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {string} text Text.\n   */\n  constructor(tileCoord, tileSize, text) {\n\n    super(tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {module:ol/size~Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  getImage() {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      const tileSize = this.tileSize_;\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  }\n\n  /**\n  * @override\n  */\n  load() {}\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nclass TileDebug extends TileSource {\n  /**\n   * @param {module:ol/source/TileDebug~Options=} options Debug tile options.\n   */\n  constructor(options) {\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  /**\n  * @inheritDoc\n  */\n  getTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      const tileSize = toSize(this.tileGrid.getTileSize(z));\n      const tileCoord = [z, x, y];\n      const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      const text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      const tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n}\n\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {module:ol/source/TileJSON~Options=} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {TileJSON}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {TileJSON} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON.bounds !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    const minZoom = tileJSON.minzoom || 0;\n    const maxZoom = tileJSON.maxzoom || 22;\n    const tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n    if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n}\n\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {module:ol/source/TileWMS~Options=} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  fixedTileUrlFunction(tileCoord, pixelRatio, projection) {\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\nexport class CustomTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {module:ol/extent~Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    const yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  forDataAtCoordinate(coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json.grid;\n    this.keys_ = json.keys;\n    this.data_ = json.data;\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  }\n\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n\n  /**\n   * @override\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  }\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {module:ol/source/UTFGrid~Options=} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      const tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON.bounds !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    const minZoom = tileJSON.minzoom || 0;\n    const maxZoom = tileJSON.maxzoom || 22;\n    const tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON.template;\n\n    const grids = tileJSON.grids;\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON.attribution !== undefined) {\n      const attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      const tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UTFGrid;\n","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nclass VectorImageTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {number} sourceRevision Source revision.\n   * @param {module:ol/format/Feature} format Feature format.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\n   * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\n   * @param {Object<string, module:ol/VectorTile>} sourceTiles Source tiles.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\n   *     instantiate for source tiles.\n   * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\n   *     Function to call when a source tile's state changes.\n   * @param {number} zoom Integer zoom to render the tile for.\n   */\n  constructor(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/VectorImageTile~ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/VectorTile>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const resolution = tileGrid.getResolution(zoom);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution);\n      const useLoadedOnly = zoom != tileCoord[0];\n      let loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        let sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        const sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          const sourceTileKey = sourceTileCoord.toString();\n          let sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      const sourceTileKey = this.tileKeys[i];\n      const sourceTile = this.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer).toString();\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer).toString();\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  }\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {module:ol/VectorTile} Source tile.\n   */\n  getTile(tileKey) {\n    return this.sourceTiles_[tileKey];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    let leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    const errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        const sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          const key = listen(sourceTile, EventType.CHANGE, function(e) {\n            const state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              const uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  }\n\n  /**\n   * @private\n   */\n  finishLoading_() {\n    let loaded = this.tileKeys.length;\n    let empty = 0;\n    for (let i = loaded - 1; i >= 0; --i) {\n      const state = this.getTile(this.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  }\n}\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {module:ol/format/Feature} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/VectorTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|module:ol/size~Size} [tileSize=512] Optional tile size.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   }\n * });\n * ```\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {module:ol/source/VectorTile~Options=} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n      extent: extent,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n       * @private\n       * @type {Object<string, module:ol/VectorTile>}\n       */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n       * @protected\n       * @type {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n       *        module:ol/format/Feature, module:ol/Tile~LoadFunction)}\n       */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTiles_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord, projection);\n      const tile = new VectorImageTile(\n        tileCoord,\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n        this.getRevision(),\n        this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n        this.tileGrid, this.getTileGridForProjection(projection),\n        this.sourceTiles_, pixelRatio, projection, this.tileClass,\n        this.handleTileChange.bind(this), tileCoord[0]);\n\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n    }\n    return tileGrid;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  }\n}\n\n\nexport default VectorTile;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {module:ol/tilegrid/WMTS~Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<module:ol/coordinate~Coordinate>} */\n  const origins = [];\n  /** @type {!Array<module:ol/size~Size>} */\n  const tileSizes = [];\n  /** @type {!Array<module:ol/size~Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {module:ol/source/WMTS~Options=} options WMTS options.\n   */\n  constructor(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {module:ol/source/WMTSRequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n * @this {module:ol/source/WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  const requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  const tileGrid = this.tileGrid;\n  const dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport class CustomTile extends ImageTile {\n\n  /**\n   * @param {module:ol/tilegrid/TileGrid} tileGrid TileGrid that the tile belongs to.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n\n  /**\n   * @param {module:ol/source/Zoomify~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    const size = options.size;\n    const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const extent = options.extent || [0, -size[1], size[0], 0];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        let width = imageWidth;\n        let height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [1];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    let url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {module:ol/Tile~UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            const tileCoordZ = tileCoord[0];\n            const tileCoordX = tileCoord[1];\n            const tileCoordY = -tileCoord[2] - 1;\n            const tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            const tileSize = tileGrid.getTileSize(tileCoordZ);\n            const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n            const localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    const ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n}\n\nexport default Zoomify;\n","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Graticule from './ol/Graticule';\nimport $ol$Image from './ol/Image';\nimport $ol$ImageTile from './ol/ImageTile';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$Tile from './ol/Tile';\nimport $ol$VectorTile from './ol/VectorTile';\nimport $ol$View from './ol/View';\nimport $ol$WebGLMap from './ol/WebGLMap';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport $ol$events$Event from './ol/events/Event';\nimport $ol$events$Target from './ol/events/Target';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport $ol$format$TextFeature from './ol/format/TextFeature';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport $ol$format$XML from './ol/format/XML';\nimport $ol$format$XMLFeature from './ol/format/XMLFeature';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Layer from './ol/layer/Layer';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport $ol$render$Feature from './ol/render/Feature';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate';\nimport $ol$render$webgl$Immediate from './ol/render/webgl/Immediate';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$Map from './ol/renderer/canvas/Map';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$renderer$webgl$ImageLayer from './ol/renderer/webgl/ImageLayer';\nimport $ol$renderer$webgl$Map from './ol/renderer/webgl/Map';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$UrlTile from './ol/source/UrlTile';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache';\nimport $ol$style$AtlasManager from './ol/style/AtlasManager';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport $ol$webgl$Context from './ol/webgl/Context';\nimport * as _ol from './ol';\nimport * as _ol_Observable from './ol/Observable';\nimport * as _ol_array from './ol/array';\nimport * as _ol_color from './ol/color';\nimport * as _ol_colorlike from './ol/colorlike';\nimport * as _ol_control from './ol/control';\nimport * as _ol_control_Attribution from './ol/control/Attribution';\nimport * as _ol_control_MousePosition from './ol/control/MousePosition';\nimport * as _ol_control_OverviewMap from './ol/control/OverviewMap';\nimport * as _ol_control_Rotate from './ol/control/Rotate';\nimport * as _ol_control_ScaleLine from './ol/control/ScaleLine';\nimport * as _ol_control_ZoomSlider from './ol/control/ZoomSlider';\nimport * as _ol_coordinate from './ol/coordinate';\nimport * as _ol_easing from './ol/easing';\nimport * as _ol_events_condition from './ol/events/condition';\nimport * as _ol_extent from './ol/extent';\nimport * as _ol_featureloader from './ol/featureloader';\nimport * as _ol_format_Polyline from './ol/format/Polyline';\nimport * as _ol_format_WFS from './ol/format/WFS';\nimport * as _ol_format_filter from './ol/format/filter';\nimport * as _ol_geom_Polygon from './ol/geom/Polygon';\nimport * as _ol_has from './ol/has';\nimport * as _ol_interaction from './ol/interaction';\nimport * as _ol_interaction_Draw from './ol/interaction/Draw';\nimport * as _ol_interaction_Pointer from './ol/interaction/Pointer';\nimport * as _ol_interaction_Translate from './ol/interaction/Translate';\nimport * as _ol_loadingstrategy from './ol/loadingstrategy';\nimport * as _ol_proj from './ol/proj';\nimport * as _ol_proj_Units from './ol/proj/Units';\nimport * as _ol_proj_proj4 from './ol/proj/proj4';\nimport * as _ol_render from './ol/render';\nimport * as _ol_render_canvas from './ol/render/canvas';\nimport * as _ol_size from './ol/size';\nimport * as _ol_source_OSM from './ol/source/OSM';\nimport * as _ol_source_WMTS from './ol/source/WMTS';\nimport * as _ol_sphere from './ol/sphere';\nimport * as _ol_style_IconImageCache from './ol/style/IconImageCache';\nimport * as _ol_tilegrid from './ol/tilegrid';\nimport * as _ol_tilegrid_WMTS from './ol/tilegrid/WMTS';\nimport * as _ol_util from './ol/util';\nimport * as _ol_xml from './ol/xml';\n\nvar ol = window['ol'] = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.util = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Graticule = $ol$Graticule;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable.unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.WebGLMap = $ol$WebGLMap;\nol.array.stableSort = _ol_array.stableSort;\nol.color.asArray = _ol_color.asArray;\nol.color.asString = _ol_color.asString;\nol.colorlike.asColorLike = _ol_colorlike.asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution.render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition.render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap.render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate.render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine.render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider.render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control.defaults;\nol.coordinate.add = _ol_coordinate.add;\nol.coordinate.createStringXY = _ol_coordinate.createStringXY;\nol.coordinate.format = _ol_coordinate.format;\nol.coordinate.rotate = _ol_coordinate.rotate;\nol.coordinate.toStringHDMS = _ol_coordinate.toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate.toStringXY;\nol.easing.easeIn = _ol_easing.easeIn;\nol.easing.easeOut = _ol_easing.easeOut;\nol.easing.inAndOut = _ol_easing.inAndOut;\nol.easing.linear = _ol_easing.linear;\nol.easing.upAndDown = _ol_easing.upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition.altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition.altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition.always;\nol.events.condition.click = _ol_events_condition.click;\nol.events.condition.doubleClick = _ol_events_condition.doubleClick;\nol.events.condition.focus = _ol_events_condition.focus;\nol.events.condition.mouseOnly = _ol_events_condition.mouseOnly;\nol.events.condition.never = _ol_events_condition.never;\nol.events.condition.noModifierKeys = _ol_events_condition.noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition.platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition.pointerMove;\nol.events.condition.primaryAction = _ol_events_condition.primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition.shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition.singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition.targetNotEditable;\nol.extent.applyTransform = _ol_extent.applyTransform;\nol.extent.boundingExtent = _ol_extent.boundingExtent;\nol.extent.buffer = _ol_extent.buffer;\nol.extent.containsCoordinate = _ol_extent.containsCoordinate;\nol.extent.containsExtent = _ol_extent.containsExtent;\nol.extent.containsXY = _ol_extent.containsXY;\nol.extent.createEmpty = _ol_extent.createEmpty;\nol.extent.equals = _ol_extent.equals;\nol.extent.extend = _ol_extent.extend;\nol.extent.getArea = _ol_extent.getArea;\nol.extent.getBottomLeft = _ol_extent.getBottomLeft;\nol.extent.getBottomRight = _ol_extent.getBottomRight;\nol.extent.getCenter = _ol_extent.getCenter;\nol.extent.getHeight = _ol_extent.getHeight;\nol.extent.getIntersection = _ol_extent.getIntersection;\nol.extent.getSize = _ol_extent.getSize;\nol.extent.getTopLeft = _ol_extent.getTopLeft;\nol.extent.getTopRight = _ol_extent.getTopRight;\nol.extent.getWidth = _ol_extent.getWidth;\nol.extent.intersects = _ol_extent.intersects;\nol.extent.isEmpty = _ol_extent.isEmpty;\nol.featureloader.xhr = _ol_featureloader.xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline.decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline.decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline.encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline.encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS.writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter.and;\nol.format.filter.bbox = _ol_format_filter.bbox;\nol.format.filter.between = _ol_format_filter.between;\nol.format.filter.contains = _ol_format_filter.contains;\nol.format.filter.during = _ol_format_filter.during;\nol.format.filter.equalTo = _ol_format_filter.equalTo;\nol.format.filter.greaterThan = _ol_format_filter.greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter.greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter.intersects;\nol.format.filter.isNull = _ol_format_filter.isNull;\nol.format.filter.lessThan = _ol_format_filter.lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter.lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter.like;\nol.format.filter.not = _ol_format_filter.not;\nol.format.filter.notEqualTo = _ol_format_filter.notEqualTo;\nol.format.filter.or = _ol_format_filter.or;\nol.format.filter.within = _ol_format_filter.within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon.circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon.fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon.fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.has.DEVICE_PIXEL_RATIO = _ol_has.DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has.GEOLOCATION;\nol.has.TOUCH = _ol_has.TOUCH;\nol.inherits = _ol.inherits;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw.createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw.createRegularPolygon;\nol.interaction.Draw.handleEvent = _ol_interaction_Draw.handleEvent;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.handleEvent = _ol_interaction_Pointer.handleEvent;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction.defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy.all;\nol.loadingstrategy.bbox = _ol_loadingstrategy.bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy.tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units.METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj.addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj.addEquivalentProjections;\nol.proj.addProjection = _ol_proj.addProjection;\nol.proj.equivalent = _ol_proj.equivalent;\nol.proj.fromLonLat = _ol_proj.fromLonLat;\nol.proj.get = _ol_proj.get;\nol.proj.getPointResolution = _ol_proj.getPointResolution;\nol.proj.getTransform = _ol_proj.getTransform;\nol.proj.proj4.register = _ol_proj_proj4.register;\nol.proj.toLonLat = _ol_proj.toLonLat;\nol.proj.transform = _ol_proj.transform;\nol.proj.transformExtent = _ol_proj.transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas.labelCache;\nol.render.toContext = _ol_render.toContext;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Map = $ol$renderer$canvas$Map;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.ImageLayer = $ol$renderer$webgl$ImageLayer;\nol.renderer.webgl.Map = $ol$renderer$webgl$Map;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.size.toSize = _ol_size.toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM.ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS.optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere.getArea;\nol.sphere.getDistance = _ol_sphere.getDistance;\nol.sphere.getLength = _ol_sphere.getLength;\nol.style.AtlasManager = $ol$style$AtlasManager;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache.shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS.createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid.createXYZ;\nol.util.getUid = _ol_util.getUid;\nol.xml.getAllTextContent = _ol_xml.getAllTextContent;\nol.xml.parse = _ol_xml.parse;\n","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {module:ol/Feature|module:ol/render/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature),\n *           (module:ol/Feature|module:ol/render/Feature)):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {module:ol/size~Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {module:ol/render~ToContextOptions=} opt_options Options.\n * @return {module:ol/render/canvas/Immediate} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n"],"names":["let","uidCounter_","getUid","obj","ol_uid","const","AssertionError","code","message","split","super","this","name","Error","assign","Object","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","boundListener","keys","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","call","listenOnce","unlisten","indexOf","splice","unlistenAll","Disposable","disposed_","TRUE","FALSE","VOID","dispose","disposeInternal","Event","propagationStopped","stopPropagation","preventDefault","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","index","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable","revision_","changed","EventType","getRevision","on","Array","isArray","len","once","un","EventTarget","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","n","remove","prev","setAt","j","opt_except","assert","assertion","errorCode","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extendXY","Math","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","apply","transform2D","transform","opt_dest","dest","translate","k","clamp","cosh","exp","squaredSegmentDistance","t","squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","a","b","r","lerp","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","getAreaInternal","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","projections2","forwardTransform","inverseTransform","transforms","add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","addTransformFunc","projectionLike","opt_units","pointResolution","getter","getTransformFromProjections","vertices","addEquivalentProjections","projections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","setFromArray","rotate","angle","scale","compose","dx1","dy1","sx","sy","dx2","dy2","invert","mat","det","tmpTransform","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","prototype","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","cacheSize","fromString","s","g","exec","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","normalize","map","Number","fromStringInternal_","asArray","asColorLike","CanvasPattern","CanvasGradient","createCanvasContext2D","opt_width","opt_height","canvas","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","MAX_TEXTURE_SIZE","EXTENSIONS","ARRAY_BUFFER","FLOAT","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","CLAMP_TO_EDGE","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","context","window","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","IDLE","LOADING","LOADED","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","textContent","margin","padding","position","left","offsetHeight","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","snapToPixel","listenImageChange","thisArg","load","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","ImageState","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","round","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","bind","id","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer_","renderer","text_","zIndex_","zIndex","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","GeometryType","concat","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","properties","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","tmp","data","extension","find","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","idx","XY","XYZ","XYM","XYZM","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","abs","isNaN","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","forEachSegment","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","opt_n","opt_sphereRadius","distance","bearing","lon1","dByR","lat","asin","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","startAngle","Geolocation","position_","transform_","watchId_","GeolocationProperty","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","error","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","n2","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","pow","deg","floor","sec","ceil","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","toStringXY","interpolatePoint","fraction","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","o","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","line","interpolate","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","map_","postcomposeListenerKey_","projection_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","setMap","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","geom","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","p1","p2","getMap","frac","getMeridians","lon2","getParallels","handlePostCompose_","l","labelData","vectorContext","frameState","viewState","equivalentProjection","updateProjectionInfo_","setFillStrokeStyle","drawGeometry","setTextStyle","epsg4326Projection","worldExtentP","render","RenderEventType","ImageBase","state","pixelRatio_","getPixelRatio","getResolution","getState","ImageWrapper","src","crossOrigin","imageLoadFunction","src_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","easeIn","easeOut","inAndOut","linear","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","getKey","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","setState","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillRect","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","MapEvent","opt_frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","clientX","clientY","cloneEvent","pd","pointerId","isPrimary","pointerType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","POSTRENDER","MOVESTART","MOVEEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","ANIMATING","INTERACTING","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","z","power","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_maxLevel","oldLevel","newLevel","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","centerNone","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","rotationNone","theta","createRotationConstraint","constraints_","zoom","constrainResolution","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","returnValue","coordinatesEqual","BaseLayer","LayerProperty","visible","state_","layer","managed","getLayerState","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setVisible","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","SourceState","num","ratio","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","MapEventType","RENDERCOMPLETE","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setView","skipFeature","featureUid","computedStyle","offsetWidth","parseFloat","unskipFeature","Control","target_","listenerKeys","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","visibleAtResolution","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","msTransform","webkitTransform","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Interaction","setActive","InteractionProperty","active","opt_duration","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","activeElement","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","stopDown","trackedPointers_","targetPointers","updateTrackedPointers_","centroid","pointerEvents","handledUp","handled","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom","out_","mapExtent","boxPixelExtent","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Mode","TRACKPAD","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","handleWheelZoom_","setMouseAnchor","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleResult_","result","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle","setCenterAndRadius","getRadiusSquared_","MultiLineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","douglasPeuckerArray","intersectsLineStringArray","MultiPoint","appendPoint","getPoint","linearRingss","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","polygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","JSON","TEXT","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","getLastExtent","onerror","send","dataProjection","all","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","module","quickselectStep","compare","sd","newLeft","newRight","swap","defaultCompare","factory","rbush","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","quickselect","_all","search","bbox","childBBox","nodesToSearch","collides","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","RBush","opt_maxEntries","rbush_","items_","extents","uid","getAll","getInExtent","forEach_","forEachInExtent","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","squaredCoordinateDistance","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","startDrawing_","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","sketchFeatures","overlaySource","pass","handlePointerEvent","circleMode","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segmentData","depth","lines","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","geometries","getGeometriesArray","createOrUpdateVertexFeature_","box","nodes","pointDistanceToSegmentDataSquared","closestOnSegmentData","vertexSegments","insertVertex_","setGeometryCoordinates_","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removePoint","removeVertex_","component","dragSegment","newIndex","dragSegments","segmentsByFeature","deleted","segmentDataMatch","compareIndexes","insertVertices","vertexExtent","segmentDataMatches","componentSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureStyleAssociation_","layerFilter_","getHitTolerance","setHitTolerance","currentMap","giveSelectedStyle_","removeSelectedStyle_","select","deselect","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","updateFeature_","opt_unlisten","unregister","snapTo","snapped","isCircle","closestOnCircle","featuresToUpdate","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","oldMap","newCoordinate","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","VectorContext","drawCustom","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterGroup","textStyle","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","invertTransform","transformSetFromArray","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","iconImageCache","sortByZIndex","state1","state2","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","mapRenderer","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","drawTileImage","gutter","getOpaque","alphaChanged","ReplayGroup","getReplay","replayType","DEFAULT","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","ORDER","ReplayType","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","CanvasInstruction","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Default","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","getRenderTolerance","styleFunction","dirty","getSquaredRenderTolerance","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setReplayGroup","tt","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","scaleTransform","translateTransform","changeType","Map","defaultControls","defaultInteractions","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","marginTop","marginBottom","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","DEFAULT_EXTENT","VectorTile","consumers","replayGroups_","onLoad","setFeatures","onError","getChangeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","isFullScreen","isFullScreenSupported","keys_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreen","handleFullScreenChange_","firstElementChild","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","updateBox_","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","html","Direction","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","setThumbPosition_","res","getPositionForResolution_","ZoomToExtent","handleZoomToExtent","WebGLShader","isAnimated","WebGLFragment","WebGLVertex","fragment","Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","rotateTransform","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","WEBGL_EXTENSIONS","getExtension","ContextEventType","handleWebGLContextLost","handleWebGLContextRestored","buf","bufferKey","String","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","texture","createEmptyTexture","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","createTextureInternal","opt_wrapS","opt_wrapT","createTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","lineStringIsClosed","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","product","isValid_","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas","space","space_","emptyBlocks_","renderCallback","block","this$1","split_","newBlock1","newBlock2","deltaWidth","updateBlocks_","args","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","str","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","params","hash","calculateHash_","HIT_DETECTION_SIZE","WebGLReplayGroup","functions","replayHitDetection_","Uint8Array","readPixels","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","multiplyTransform","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tmpSize_","loaded","framebufferExtent","getTileSize","tilePixelResolution","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","WebGLMap","PROJECTION","COORDINATE_FORMAT","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","mapProjection_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","FeatureFormat","defaultFeatureProjection","transformWithOptions","write","transformed","decimals","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","esriJSONObject","spatialReference","wkid","objects","flatRing","outerRings","shift","matched","containsHole","convertRings","geometryReader","geometryWriter","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","Document","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","XMLFeature","xmlSerializer_","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","featureMember","readFeaturesInternal","featureMembers","ft","uri","ns","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","test","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readBoolean","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","GML","GML2","readFlatCoordinates_","proj","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","Box","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geometry_name","geoJSONFeatures","crs","rightHanded","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","FRACTION","IconImage","imageState_","tainting_","determineTainting_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","Pbf","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","readPackedEnd","pbf","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","ieee754","readDouble","readVarintRemainder","readVarint64","readSVarint","b3","b0","bytesPerSequence","fromCharCode","readUtf8","readBytes","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","version","featurePBFReader","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML","flipXY","opt_destOffset","destOffset","Polyline","factor_","factor","geometryLayout_","decodeDeltas","encodeDeltas","numbers","opt_factor","lastNumbers","encodeFloats","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformVertex","concatenateArcs","polyArray","ringCoords","Filter","tagName_","getTagName","LogicalNary","conditions","And","Bbox","Spatial","Contains","Comparison","propertyName","During","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo","GreaterThan","GreaterThanOrEqualTo","Intersects","IsBetween","lowerBoundary","upperBoundary","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull","LessThan","LessThanOrEqualTo","Not","NotEqualTo","Or","Within","and","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","bboxFilter","andFilter","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","EMPTY","Z","TokenType","WKTGeometryType","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","readNumber_","readText_","scientificNotation","substring","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","match","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","geomType","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","NAMESPACE_URI","readHref","read","readFromDocument","readFromNode","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","default","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","WMSGetFeatureInfo","readFeatures_","layerFeatures","gmlFeatures","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","ImageLayer","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","VectorTileLayer","opt_tileCoord","getKeyZXY","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","TileCache","pruneExceptNewestZ","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","renderReprojected","leftToLoad","sourceListenKey","tmpTileCoord","TileGrid","opt_strict","currentVal","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","sizes","calculateTileRanges_","getForProjection","createForProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","Corner","resolutionsFromExtent","createXYZ","extentFromProjection","half","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","thisProj","scaleSize","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","UrlTile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","CartoDB","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","keyParams","encodeURIComponent","qs","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","VERSION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","Static","imageExtent_","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","WMSServerType","ATTRIBUTION","OSM","hasImageData","ImageData","_","newImageData","createImageData","createMinion","operation","workerHasImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","Uint8ClampedArray","arrays","createWorker","onMessage","lib","blob","Blob","createObjectURL","worker","Worker","Processor","threads","_imageOps","minion","workers","_onWorkerMessage","postMessage","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","_destroyed","job","slices","_resolveJob","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","threads_","renderers_","createRenderers","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","Stamen","provider","providerConfig","layerConfig","TileArcGISRest","tmpExtent_","getKeyForParams_","LabeledTile","strokeRect","TileDebug","textTileCoord","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","bounds","minzoom","maxzoom","attributionExtent","TileWMS","transparent","bufferSize","CustomTile","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","grid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","tileGrids_","KVP","REST","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","WMTS","requestEncoding","WMTSRequestEncoding","version_","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Version","localContext","TileCol","TileRow","TierSizeCalculation","zoomifyImage_","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","ol","colorlike","featureloader","loadingstrategy","proj4","webgl","sphere","util","$ol$Collection","$ol$Feature","$ol$Geolocation","$ol$Graticule","$ol$Kinetic","$ol$Map","$ol$Object","$ol$Observable","unByKey","$ol$Overlay","$ol$PluggableMap","$ol$View","$ol$WebGLMap","_ol_array.stableSort","_ol_color.asArray","_ol_color.asString","_ol_colorlike.asColorLike","$ol$control$Attribution","_ol_control_Attribution.render","$ol$control$Control","$ol$control$FullScreen","$ol$control$MousePosition","_ol_control_MousePosition.render","$ol$control$OverviewMap","_ol_control_OverviewMap.render","$ol$control$Rotate","_ol_control_Rotate.render","$ol$control$ScaleLine","_ol_control_ScaleLine.render","$ol$control$Zoom","$ol$control$ZoomSlider","_ol_control_ZoomSlider.render","$ol$control$ZoomToExtent","_ol_control.defaults","_ol_coordinate.add","createStringXY","_ol_coordinate.format","_ol_coordinate.rotate","toStringHDMS","_ol_coordinate.toStringXY","_ol_easing.easeIn","_ol_easing.easeOut","_ol_easing.inAndOut","_ol_easing.linear","upAndDown","_ol_events_condition.altKeyOnly","_ol_events_condition.altShiftKeysOnly","_ol_events_condition.always","click","doubleClick","_ol_events_condition.focus","_ol_events_condition.mouseOnly","_ol_events_condition.never","_ol_events_condition.noModifierKeys","platformModifierKeyOnly","_ol_events_condition.pointerMove","_ol_events_condition.primaryAction","_ol_events_condition.shiftKeyOnly","_ol_events_condition.singleClick","_ol_events_condition.targetNotEditable","_ol_extent.applyTransform","_ol_extent.boundingExtent","_ol_extent.buffer","_ol_extent.containsCoordinate","_ol_extent.containsExtent","_ol_extent.containsXY","_ol_extent.createEmpty","_ol_extent.equals","_ol_extent.extend","_ol_extent.getArea","_ol_extent.getBottomLeft","_ol_extent.getBottomRight","_ol_extent.getCenter","_ol_extent.getHeight","_ol_extent.getIntersection","_ol_extent.getTopLeft","_ol_extent.getTopRight","_ol_extent.getWidth","_ol_extent.intersects","_ol_extent.isEmpty","_ol_featureloader.xhr","$ol$format$EsriJSON","$ol$format$Feature","$ol$format$GML","$ol$format$GML2","$ol$format$GML3","$ol$format$GPX","$ol$format$GeoJSON","$ol$format$IGC","$ol$format$KML","$ol$format$MVT","$ol$format$OSMXML","$ol$format$Polyline","_ol_format_Polyline.decodeDeltas","_ol_format_Polyline.decodeFloats","_ol_format_Polyline.encodeDeltas","_ol_format_Polyline.encodeFloats","$ol$format$TopoJSON","$ol$format$WFS","writeFilter","$ol$format$WKT","$ol$format$WMSCapabilities","$ol$format$WMSGetFeatureInfo","$ol$format$WMTSCapabilities","$ol$format$filter$Bbox","$ol$format$filter$Contains","$ol$format$filter$During","$ol$format$filter$EqualTo","$ol$format$filter$GreaterThan","$ol$format$filter$GreaterThanOrEqualTo","$ol$format$filter$Intersects","$ol$format$filter$IsBetween","$ol$format$filter$IsLike","$ol$format$filter$IsNull","$ol$format$filter$LessThan","$ol$format$filter$LessThanOrEqualTo","$ol$format$filter$Not","$ol$format$filter$NotEqualTo","$ol$format$filter$Or","$ol$format$filter$Within","_ol_format_filter.and","_ol_format_filter.bbox","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","$ol$geom$Circle","$ol$geom$Geometry","$ol$geom$GeometryCollection","$ol$geom$LineString","$ol$geom$LinearRing","$ol$geom$MultiLineString","$ol$geom$MultiPoint","$ol$geom$MultiPolygon","$ol$geom$Point","$ol$geom$Polygon","_ol_geom_Polygon.circular","_ol_geom_Polygon.fromCircle","_ol_geom_Polygon.fromExtent","$ol$geom$SimpleGeometry","_ol_has.DEVICE_PIXEL_RATIO","_ol_has.GEOLOCATION","_ol_has.TOUCH","inherits","childCtor","parentCtor","create","constructor","$ol$interaction$DoubleClickZoom","$ol$interaction$DragAndDrop","$ol$interaction$DragBox","$ol$interaction$DragPan","$ol$interaction$DragRotate","$ol$interaction$DragRotateAndZoom","$ol$interaction$DragZoom","$ol$interaction$Draw","createBox","boxCoordinates","createRegularPolygon","_ol_interaction_Draw.handleEvent","Extent","$ol$interaction$Extent","$ol$interaction$Interaction","$ol$interaction$KeyboardPan","$ol$interaction$KeyboardZoom","$ol$interaction$Modify","$ol$interaction$MouseWheelZoom","$ol$interaction$PinchRotate","$ol$interaction$PinchZoom","Pointer","$ol$interaction$Pointer","_ol_interaction_Pointer.handleEvent","$ol$interaction$Select","$ol$interaction$Snap","$ol$interaction$Translate","_ol_interaction.defaults","Base","$ol$layer$Base","Group","$ol$layer$Group","$ol$layer$Heatmap","$ol$layer$Image","$ol$layer$Tile","Vector","$ol$layer$Vector","$ol$layer$VectorTile","_ol_loadingstrategy.all","$ol$proj$Projection","_ol_proj_Units.METERS_PER_UNIT","_ol_proj.addCoordinateTransforms","_ol_proj.addEquivalentProjections","_ol_proj.addProjection","_ol_proj.equivalent","fromLonLat","_ol_proj.get","_ol_proj.getPointResolution","_ol_proj.getTransform","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","_ol_proj.transform","_ol_proj.transformExtent","$ol$render$VectorContext","_ol_render_canvas.labelCache","toContext","$ol$renderer$canvas$ImageLayer","$ol$renderer$canvas$Map","$ol$renderer$canvas$TileLayer","$ol$renderer$canvas$VectorLayer","$ol$renderer$canvas$VectorTileLayer","$ol$renderer$webgl$ImageLayer","$ol$renderer$webgl$Map","$ol$renderer$webgl$TileLayer","$ol$renderer$webgl$VectorLayer","_ol_size.toSize","$ol$source$BingMaps","$ol$source$CartoDB","$ol$source$Cluster","$ol$source$Image","$ol$source$ImageArcGISRest","$ol$source$ImageCanvas","$ol$source$ImageMapGuide","ImageStatic","$ol$source$ImageStatic","$ol$source$ImageWMS","$ol$source$OSM","_ol_source_OSM.ATTRIBUTION","Raster","$ol$source$Raster","$ol$source$Source","$ol$source$Stamen","$ol$source$Tile","$ol$source$TileArcGISRest","$ol$source$TileDebug","$ol$source$TileImage","$ol$source$TileJSON","$ol$source$TileWMS","$ol$source$UTFGrid","$ol$source$Vector","$ol$source$VectorTile","$ol$source$WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","$ol$source$XYZ","$ol$source$Zoomify","_ol_sphere.getDistance","$ol$style$AtlasManager","$ol$style$Circle","$ol$style$Fill","$ol$style$Icon","_ol_style_IconImageCache.shared","$ol$style$Image","$ol$style$RegularShape","$ol$style$Stroke","$ol$style$Style","$ol$style$Text","$ol$tilegrid$TileGrid","$ol$tilegrid$WMTS","_ol_tilegrid_WMTS.createFromCapabilitiesMatrixSet","_ol_tilegrid.createXYZ","_ol_util.getUid","_ol_xml.getAllTextContent","_ol_xml.parse"],"mappings":"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"}